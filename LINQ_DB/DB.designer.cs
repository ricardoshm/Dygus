#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LINQ_DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dygussatdemo")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArmazem(Armazem instance);
    partial void UpdateArmazem(Armazem instance);
    partial void DeleteArmazem(Armazem instance);
    partial void InsertVersao(Versao instance);
    partial void UpdateVersao(Versao instance);
    partial void DeleteVersao(Versao instance);
    partial void InsertArtigo(Artigo instance);
    partial void UpdateArtigo(Artigo instance);
    partial void DeleteArtigo(Artigo instance);
    partial void InsertArtigo_Stock(Artigo_Stock instance);
    partial void UpdateArtigo_Stock(Artigo_Stock instance);
    partial void DeleteArtigo_Stock(Artigo_Stock instance);
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Path(aspnet_Path instance);
    partial void Updateaspnet_Path(aspnet_Path instance);
    partial void Deleteaspnet_Path(aspnet_Path instance);
    partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void InsertCondicoes_Gerai(Condicoes_Gerai instance);
    partial void UpdateCondicoes_Gerai(Condicoes_Gerai instance);
    partial void DeleteCondicoes_Gerai(Condicoes_Gerai instance);
    partial void InsertConfiguracao(Configuracao instance);
    partial void UpdateConfiguracao(Configuracao instance);
    partial void DeleteConfiguracao(Configuracao instance);
    partial void InsertEquipamento_Avariado(Equipamento_Avariado instance);
    partial void UpdateEquipamento_Avariado(Equipamento_Avariado instance);
    partial void DeleteEquipamento_Avariado(Equipamento_Avariado instance);
    partial void InsertEquipamento_Avariado_Acessorio(Equipamento_Avariado_Acessorio instance);
    partial void UpdateEquipamento_Avariado_Acessorio(Equipamento_Avariado_Acessorio instance);
    partial void DeleteEquipamento_Avariado_Acessorio(Equipamento_Avariado_Acessorio instance);
    partial void InsertEquipamento_Avariado_Bloqueio(Equipamento_Avariado_Bloqueio instance);
    partial void UpdateEquipamento_Avariado_Bloqueio(Equipamento_Avariado_Bloqueio instance);
    partial void DeleteEquipamento_Avariado_Bloqueio(Equipamento_Avariado_Bloqueio instance);
    partial void InsertEquipamento_Avariado_Garantia(Equipamento_Avariado_Garantia instance);
    partial void UpdateEquipamento_Avariado_Garantia(Equipamento_Avariado_Garantia instance);
    partial void DeleteEquipamento_Avariado_Garantia(Equipamento_Avariado_Garantia instance);
    partial void InsertEquipamento_Avariado_GarantiaTipo(Equipamento_Avariado_GarantiaTipo instance);
    partial void UpdateEquipamento_Avariado_GarantiaTipo(Equipamento_Avariado_GarantiaTipo instance);
    partial void DeleteEquipamento_Avariado_GarantiaTipo(Equipamento_Avariado_GarantiaTipo instance);
    partial void InsertEquipamento_Avariado_TimingReparacao(Equipamento_Avariado_TimingReparacao instance);
    partial void UpdateEquipamento_Avariado_TimingReparacao(Equipamento_Avariado_TimingReparacao instance);
    partial void DeleteEquipamento_Avariado_TimingReparacao(Equipamento_Avariado_TimingReparacao instance);
    partial void InsertEquipamento_Avariado_TrabalhosAdicionai(Equipamento_Avariado_TrabalhosAdicionai instance);
    partial void UpdateEquipamento_Avariado_TrabalhosAdicionai(Equipamento_Avariado_TrabalhosAdicionai instance);
    partial void DeleteEquipamento_Avariado_TrabalhosAdicionai(Equipamento_Avariado_TrabalhosAdicionai instance);
    partial void InsertEquipamentos_Substituicao(Equipamentos_Substituicao instance);
    partial void UpdateEquipamentos_Substituicao(Equipamentos_Substituicao instance);
    partial void DeleteEquipamentos_Substituicao(Equipamentos_Substituicao instance);
    partial void InsertEquipamentos_Substituicao_Disponibilidade(Equipamentos_Substituicao_Disponibilidade instance);
    partial void UpdateEquipamentos_Substituicao_Disponibilidade(Equipamentos_Substituicao_Disponibilidade instance);
    partial void DeleteEquipamentos_Substituicao_Disponibilidade(Equipamentos_Substituicao_Disponibilidade instance);
    partial void InsertFuncionario(Funcionario instance);
    partial void UpdateFuncionario(Funcionario instance);
    partial void DeleteFuncionario(Funcionario instance);
    partial void InsertFuncionario_Tipo(Funcionario_Tipo instance);
    partial void UpdateFuncionario_Tipo(Funcionario_Tipo instance);
    partial void DeleteFuncionario_Tipo(Funcionario_Tipo instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    partial void InsertLoja(Loja instance);
    partial void UpdateLoja(Loja instance);
    partial void DeleteLoja(Loja instance);
    partial void InsertMarca(Marca instance);
    partial void UpdateMarca(Marca instance);
    partial void DeleteMarca(Marca instance);
    partial void InsertModelo(Modelo instance);
    partial void UpdateModelo(Modelo instance);
    partial void DeleteModelo(Modelo instance);
    partial void InsertOperadora(Operadora instance);
    partial void UpdateOperadora(Operadora instance);
    partial void DeleteOperadora(Operadora instance);
    partial void InsertOrcamento(Orcamento instance);
    partial void UpdateOrcamento(Orcamento instance);
    partial void DeleteOrcamento(Orcamento instance);
    partial void InsertOrcamentos_Comentario(Orcamentos_Comentario instance);
    partial void UpdateOrcamentos_Comentario(Orcamentos_Comentario instance);
    partial void DeleteOrcamentos_Comentario(Orcamentos_Comentario instance);
    partial void InsertOrcamentos_Estado(Orcamentos_Estado instance);
    partial void UpdateOrcamentos_Estado(Orcamentos_Estado instance);
    partial void DeleteOrcamentos_Estado(Orcamentos_Estado instance);
    partial void InsertOrdem_Reparacao(Ordem_Reparacao instance);
    partial void UpdateOrdem_Reparacao(Ordem_Reparacao instance);
    partial void DeleteOrdem_Reparacao(Ordem_Reparacao instance);
    partial void InsertOrdem_Reparacao_Artigo(Ordem_Reparacao_Artigo instance);
    partial void UpdateOrdem_Reparacao_Artigo(Ordem_Reparacao_Artigo instance);
    partial void DeleteOrdem_Reparacao_Artigo(Ordem_Reparacao_Artigo instance);
    partial void InsertOrdem_Reparacao_Atribuicao(Ordem_Reparacao_Atribuicao instance);
    partial void UpdateOrdem_Reparacao_Atribuicao(Ordem_Reparacao_Atribuicao instance);
    partial void DeleteOrdem_Reparacao_Atribuicao(Ordem_Reparacao_Atribuicao instance);
    partial void InsertOrdem_Reparacao_Estado(Ordem_Reparacao_Estado instance);
    partial void UpdateOrdem_Reparacao_Estado(Ordem_Reparacao_Estado instance);
    partial void DeleteOrdem_Reparacao_Estado(Ordem_Reparacao_Estado instance);
    partial void InsertOrdem_Reparacao_MaoObra(Ordem_Reparacao_MaoObra instance);
    partial void UpdateOrdem_Reparacao_MaoObra(Ordem_Reparacao_MaoObra instance);
    partial void DeleteOrdem_Reparacao_MaoObra(Ordem_Reparacao_MaoObra instance);
    partial void InsertParceiro(Parceiro instance);
    partial void UpdateParceiro(Parceiro instance);
    partial void DeleteParceiro(Parceiro instance);
    partial void InsertParceiro_Tipo(Parceiro_Tipo instance);
    partial void UpdateParceiro_Tipo(Parceiro_Tipo instance);
    partial void DeleteParceiro_Tipo(Parceiro_Tipo instance);
    #endregion
		
		public DBDataContext() : 
				base(global::LINQ_DB.Properties.Settings.Default.dygussatdemoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Armazem> Armazems
		{
			get
			{
				return this.GetTable<Armazem>();
			}
		}
		
		public System.Data.Linq.Table<Versao> Versaos
		{
			get
			{
				return this.GetTable<Versao>();
			}
		}
		
		public System.Data.Linq.Table<Artigo> Artigos
		{
			get
			{
				return this.GetTable<Artigo>();
			}
		}
		
		public System.Data.Linq.Table<Artigo_Stock> Artigo_Stocks
		{
			get
			{
				return this.GetTable<Artigo_Stock>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this.GetTable<aspnet_Path>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationAllUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<aspnet_WebEvent_Event>();
			}
		}
		
		public System.Data.Linq.Table<Condicoes_Gerai> Condicoes_Gerais
		{
			get
			{
				return this.GetTable<Condicoes_Gerai>();
			}
		}
		
		public System.Data.Linq.Table<Configuracao> Configuracaos
		{
			get
			{
				return this.GetTable<Configuracao>();
			}
		}
		
		public System.Data.Linq.Table<Equipamento_Avariado> Equipamento_Avariados
		{
			get
			{
				return this.GetTable<Equipamento_Avariado>();
			}
		}
		
		public System.Data.Linq.Table<Equipamento_Avariado_Acessorio> Equipamento_Avariado_Acessorios
		{
			get
			{
				return this.GetTable<Equipamento_Avariado_Acessorio>();
			}
		}
		
		public System.Data.Linq.Table<Equipamento_Avariado_Bloqueio> Equipamento_Avariado_Bloqueios
		{
			get
			{
				return this.GetTable<Equipamento_Avariado_Bloqueio>();
			}
		}
		
		public System.Data.Linq.Table<Equipamento_Avariado_Garantia> Equipamento_Avariado_Garantias
		{
			get
			{
				return this.GetTable<Equipamento_Avariado_Garantia>();
			}
		}
		
		public System.Data.Linq.Table<Equipamento_Avariado_GarantiaTipo> Equipamento_Avariado_GarantiaTipos
		{
			get
			{
				return this.GetTable<Equipamento_Avariado_GarantiaTipo>();
			}
		}
		
		public System.Data.Linq.Table<Equipamento_Avariado_TimingReparacao> Equipamento_Avariado_TimingReparacaos
		{
			get
			{
				return this.GetTable<Equipamento_Avariado_TimingReparacao>();
			}
		}
		
		public System.Data.Linq.Table<Equipamento_Avariado_TrabalhosAdicionai> Equipamento_Avariado_TrabalhosAdicionais
		{
			get
			{
				return this.GetTable<Equipamento_Avariado_TrabalhosAdicionai>();
			}
		}
		
		public System.Data.Linq.Table<Equipamentos_Substituicao> Equipamentos_Substituicaos
		{
			get
			{
				return this.GetTable<Equipamentos_Substituicao>();
			}
		}
		
		public System.Data.Linq.Table<Equipamentos_Substituicao_Disponibilidade> Equipamentos_Substituicao_Disponibilidades
		{
			get
			{
				return this.GetTable<Equipamentos_Substituicao_Disponibilidade>();
			}
		}
		
		public System.Data.Linq.Table<Funcionario> Funcionarios
		{
			get
			{
				return this.GetTable<Funcionario>();
			}
		}
		
		public System.Data.Linq.Table<Funcionario_Tipo> Funcionario_Tipos
		{
			get
			{
				return this.GetTable<Funcionario_Tipo>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<Loja> Lojas
		{
			get
			{
				return this.GetTable<Loja>();
			}
		}
		
		public System.Data.Linq.Table<Marca> Marcas
		{
			get
			{
				return this.GetTable<Marca>();
			}
		}
		
		public System.Data.Linq.Table<Modelo> Modelos
		{
			get
			{
				return this.GetTable<Modelo>();
			}
		}
		
		public System.Data.Linq.Table<Operadora> Operadoras
		{
			get
			{
				return this.GetTable<Operadora>();
			}
		}
		
		public System.Data.Linq.Table<Orcamento> Orcamentos
		{
			get
			{
				return this.GetTable<Orcamento>();
			}
		}
		
		public System.Data.Linq.Table<Orcamentos_Comentario> Orcamentos_Comentarios
		{
			get
			{
				return this.GetTable<Orcamentos_Comentario>();
			}
		}
		
		public System.Data.Linq.Table<Orcamentos_Estado> Orcamentos_Estados
		{
			get
			{
				return this.GetTable<Orcamentos_Estado>();
			}
		}
		
		public System.Data.Linq.Table<Ordem_Reparacao> Ordem_Reparacaos
		{
			get
			{
				return this.GetTable<Ordem_Reparacao>();
			}
		}
		
		public System.Data.Linq.Table<Ordem_Reparacao_Artigo> Ordem_Reparacao_Artigos
		{
			get
			{
				return this.GetTable<Ordem_Reparacao_Artigo>();
			}
		}
		
		public System.Data.Linq.Table<Ordem_Reparacao_Atribuicao> Ordem_Reparacao_Atribuicaos
		{
			get
			{
				return this.GetTable<Ordem_Reparacao_Atribuicao>();
			}
		}
		
		public System.Data.Linq.Table<Ordem_Reparacao_Estado> Ordem_Reparacao_Estados
		{
			get
			{
				return this.GetTable<Ordem_Reparacao_Estado>();
			}
		}
		
		public System.Data.Linq.Table<Ordem_Reparacao_MaoObra> Ordem_Reparacao_MaoObras
		{
			get
			{
				return this.GetTable<Ordem_Reparacao_MaoObra>();
			}
		}
		
		public System.Data.Linq.Table<Parceiro> Parceiros
		{
			get
			{
				return this.GetTable<Parceiro>();
			}
		}
		
		public System.Data.Linq.Table<Parceiro_Tipo> Parceiro_Tipos
		{
			get
			{
				return this.GetTable<Parceiro_Tipo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Armazem")]
	public partial class Armazem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRICAO;
		
		private string _OBSERVACOES;
		
		private System.Nullable<bool> _ACTIVO;
		
		private EntitySet<Artigo> _Artigos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    partial void OnOBSERVACOESChanging(string value);
    partial void OnOBSERVACOESChanged();
    partial void OnACTIVOChanging(System.Nullable<bool> value);
    partial void OnACTIVOChanged();
    #endregion
		
		public Armazem()
		{
			this._Artigos = new EntitySet<Artigo>(new Action<Artigo>(this.attach_Artigos), new Action<Artigo>(this.detach_Artigos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACOES", DbType="NVarChar(MAX)")]
		public string OBSERVACOES
		{
			get
			{
				return this._OBSERVACOES;
			}
			set
			{
				if ((this._OBSERVACOES != value))
				{
					this.OnOBSERVACOESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACOES = value;
					this.SendPropertyChanged("OBSERVACOES");
					this.OnOBSERVACOESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVO", DbType="Bit")]
		public System.Nullable<bool> ACTIVO
		{
			get
			{
				return this._ACTIVO;
			}
			set
			{
				if ((this._ACTIVO != value))
				{
					this.OnACTIVOChanging(value);
					this.SendPropertyChanging();
					this._ACTIVO = value;
					this.SendPropertyChanged("ACTIVO");
					this.OnACTIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Armazem_Artigo", Storage="_Artigos", ThisKey="ID", OtherKey="ID_ARMAZEM")]
		public EntitySet<Artigo> Artigos
		{
			get
			{
				return this._Artigos;
			}
			set
			{
				this._Artigos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Artigos(Artigo entity)
		{
			this.SendPropertyChanging();
			entity.Armazem = this;
		}
		
		private void detach_Artigos(Artigo entity)
		{
			this.SendPropertyChanging();
			entity.Armazem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Versao")]
	public partial class Versao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _VERSAO1;
		
		private System.DateTime _DATA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVERSAO1Changing(string value);
    partial void OnVERSAO1Changed();
    partial void OnDATAChanging(System.DateTime value);
    partial void OnDATAChanged();
    #endregion
		
		public Versao()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="VERSAO", Storage="_VERSAO1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string VERSAO1
		{
			get
			{
				return this._VERSAO1;
			}
			set
			{
				if ((this._VERSAO1 != value))
				{
					this.OnVERSAO1Changing(value);
					this.SendPropertyChanging();
					this._VERSAO1 = value;
					this.SendPropertyChanged("VERSAO1");
					this.OnVERSAO1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA", DbType="DateTime NOT NULL")]
		public System.DateTime DATA
		{
			get
			{
				return this._DATA;
			}
			set
			{
				if ((this._DATA != value))
				{
					this.OnDATAChanging(value);
					this.SendPropertyChanging();
					this._DATA = value;
					this.SendPropertyChanged("DATA");
					this.OnDATAChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Artigo")]
	public partial class Artigo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_ARMAZEM;
		
		private string _CODIGO;
		
		private string _DESCRICAO;
		
		private System.Nullable<System.DateTime> _DATA_REGISTO;
		
		private System.Nullable<System.DateTime> _DATA_ULTIMA_MODIFICACAO;
		
		private System.Nullable<bool> _ACTIVO;
		
		private EntitySet<Artigo_Stock> _Artigo_Stocks;
		
		private EntitySet<Ordem_Reparacao_Artigo> _Ordem_Reparacao_Artigos;
		
		private EntityRef<Armazem> _Armazem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_ARMAZEMChanging(System.Nullable<int> value);
    partial void OnID_ARMAZEMChanged();
    partial void OnCODIGOChanging(string value);
    partial void OnCODIGOChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    partial void OnDATA_REGISTOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_REGISTOChanged();
    partial void OnDATA_ULTIMA_MODIFICACAOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_ULTIMA_MODIFICACAOChanged();
    partial void OnACTIVOChanging(System.Nullable<bool> value);
    partial void OnACTIVOChanged();
    #endregion
		
		public Artigo()
		{
			this._Artigo_Stocks = new EntitySet<Artigo_Stock>(new Action<Artigo_Stock>(this.attach_Artigo_Stocks), new Action<Artigo_Stock>(this.detach_Artigo_Stocks));
			this._Ordem_Reparacao_Artigos = new EntitySet<Ordem_Reparacao_Artigo>(new Action<Ordem_Reparacao_Artigo>(this.attach_Ordem_Reparacao_Artigos), new Action<Ordem_Reparacao_Artigo>(this.detach_Ordem_Reparacao_Artigos));
			this._Armazem = default(EntityRef<Armazem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ARMAZEM", DbType="Int")]
		public System.Nullable<int> ID_ARMAZEM
		{
			get
			{
				return this._ID_ARMAZEM;
			}
			set
			{
				if ((this._ID_ARMAZEM != value))
				{
					if (this._Armazem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ARMAZEMChanging(value);
					this.SendPropertyChanging();
					this._ID_ARMAZEM = value;
					this.SendPropertyChanged("ID_ARMAZEM");
					this.OnID_ARMAZEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGO", DbType="NVarChar(MAX)")]
		public string CODIGO
		{
			get
			{
				return this._CODIGO;
			}
			set
			{
				if ((this._CODIGO != value))
				{
					this.OnCODIGOChanging(value);
					this.SendPropertyChanging();
					this._CODIGO = value;
					this.SendPropertyChanged("CODIGO");
					this.OnCODIGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_REGISTO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_REGISTO
		{
			get
			{
				return this._DATA_REGISTO;
			}
			set
			{
				if ((this._DATA_REGISTO != value))
				{
					this.OnDATA_REGISTOChanging(value);
					this.SendPropertyChanging();
					this._DATA_REGISTO = value;
					this.SendPropertyChanged("DATA_REGISTO");
					this.OnDATA_REGISTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_ULTIMA_MODIFICACAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_ULTIMA_MODIFICACAO
		{
			get
			{
				return this._DATA_ULTIMA_MODIFICACAO;
			}
			set
			{
				if ((this._DATA_ULTIMA_MODIFICACAO != value))
				{
					this.OnDATA_ULTIMA_MODIFICACAOChanging(value);
					this.SendPropertyChanging();
					this._DATA_ULTIMA_MODIFICACAO = value;
					this.SendPropertyChanged("DATA_ULTIMA_MODIFICACAO");
					this.OnDATA_ULTIMA_MODIFICACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVO", DbType="Bit")]
		public System.Nullable<bool> ACTIVO
		{
			get
			{
				return this._ACTIVO;
			}
			set
			{
				if ((this._ACTIVO != value))
				{
					this.OnACTIVOChanging(value);
					this.SendPropertyChanging();
					this._ACTIVO = value;
					this.SendPropertyChanged("ACTIVO");
					this.OnACTIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artigo_Artigo_Stock", Storage="_Artigo_Stocks", ThisKey="ID", OtherKey="ID_ARTIGO")]
		public EntitySet<Artigo_Stock> Artigo_Stocks
		{
			get
			{
				return this._Artigo_Stocks;
			}
			set
			{
				this._Artigo_Stocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artigo_Ordem_Reparacao_Artigo", Storage="_Ordem_Reparacao_Artigos", ThisKey="ID", OtherKey="ID_ARTIGO")]
		public EntitySet<Ordem_Reparacao_Artigo> Ordem_Reparacao_Artigos
		{
			get
			{
				return this._Ordem_Reparacao_Artigos;
			}
			set
			{
				this._Ordem_Reparacao_Artigos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Armazem_Artigo", Storage="_Armazem", ThisKey="ID_ARMAZEM", OtherKey="ID", IsForeignKey=true)]
		public Armazem Armazem
		{
			get
			{
				return this._Armazem.Entity;
			}
			set
			{
				Armazem previousValue = this._Armazem.Entity;
				if (((previousValue != value) 
							|| (this._Armazem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Armazem.Entity = null;
						previousValue.Artigos.Remove(this);
					}
					this._Armazem.Entity = value;
					if ((value != null))
					{
						value.Artigos.Add(this);
						this._ID_ARMAZEM = value.ID;
					}
					else
					{
						this._ID_ARMAZEM = default(Nullable<int>);
					}
					this.SendPropertyChanged("Armazem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Artigo_Stocks(Artigo_Stock entity)
		{
			this.SendPropertyChanging();
			entity.Artigo = this;
		}
		
		private void detach_Artigo_Stocks(Artigo_Stock entity)
		{
			this.SendPropertyChanging();
			entity.Artigo = null;
		}
		
		private void attach_Ordem_Reparacao_Artigos(Ordem_Reparacao_Artigo entity)
		{
			this.SendPropertyChanging();
			entity.Artigo = this;
		}
		
		private void detach_Ordem_Reparacao_Artigos(Ordem_Reparacao_Artigo entity)
		{
			this.SendPropertyChanging();
			entity.Artigo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Artigo_Stock")]
	public partial class Artigo_Stock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_ARTIGO;
		
		private System.Nullable<int> _QTD_DISPONIVEL;
		
		private System.Nullable<int> _QTD_MINIMA_STOCK;
		
		private System.Nullable<double> _VALOR_CUSTO;
		
		private System.Nullable<double> _VALOR_VENDA;
		
		private System.Nullable<double> _VALOR_REVENDA;
		
		private EntityRef<Artigo> _Artigo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_ARTIGOChanging(System.Nullable<int> value);
    partial void OnID_ARTIGOChanged();
    partial void OnQTD_DISPONIVELChanging(System.Nullable<int> value);
    partial void OnQTD_DISPONIVELChanged();
    partial void OnQTD_MINIMA_STOCKChanging(System.Nullable<int> value);
    partial void OnQTD_MINIMA_STOCKChanged();
    partial void OnVALOR_CUSTOChanging(System.Nullable<double> value);
    partial void OnVALOR_CUSTOChanged();
    partial void OnVALOR_VENDAChanging(System.Nullable<double> value);
    partial void OnVALOR_VENDAChanged();
    partial void OnVALOR_REVENDAChanging(System.Nullable<double> value);
    partial void OnVALOR_REVENDAChanged();
    #endregion
		
		public Artigo_Stock()
		{
			this._Artigo = default(EntityRef<Artigo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ARTIGO", DbType="Int")]
		public System.Nullable<int> ID_ARTIGO
		{
			get
			{
				return this._ID_ARTIGO;
			}
			set
			{
				if ((this._ID_ARTIGO != value))
				{
					if (this._Artigo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ARTIGOChanging(value);
					this.SendPropertyChanging();
					this._ID_ARTIGO = value;
					this.SendPropertyChanged("ID_ARTIGO");
					this.OnID_ARTIGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTD_DISPONIVEL", DbType="Int")]
		public System.Nullable<int> QTD_DISPONIVEL
		{
			get
			{
				return this._QTD_DISPONIVEL;
			}
			set
			{
				if ((this._QTD_DISPONIVEL != value))
				{
					this.OnQTD_DISPONIVELChanging(value);
					this.SendPropertyChanging();
					this._QTD_DISPONIVEL = value;
					this.SendPropertyChanged("QTD_DISPONIVEL");
					this.OnQTD_DISPONIVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTD_MINIMA_STOCK", DbType="Int")]
		public System.Nullable<int> QTD_MINIMA_STOCK
		{
			get
			{
				return this._QTD_MINIMA_STOCK;
			}
			set
			{
				if ((this._QTD_MINIMA_STOCK != value))
				{
					this.OnQTD_MINIMA_STOCKChanging(value);
					this.SendPropertyChanging();
					this._QTD_MINIMA_STOCK = value;
					this.SendPropertyChanged("QTD_MINIMA_STOCK");
					this.OnQTD_MINIMA_STOCKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALOR_CUSTO", DbType="Float")]
		public System.Nullable<double> VALOR_CUSTO
		{
			get
			{
				return this._VALOR_CUSTO;
			}
			set
			{
				if ((this._VALOR_CUSTO != value))
				{
					this.OnVALOR_CUSTOChanging(value);
					this.SendPropertyChanging();
					this._VALOR_CUSTO = value;
					this.SendPropertyChanged("VALOR_CUSTO");
					this.OnVALOR_CUSTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALOR_VENDA", DbType="Float")]
		public System.Nullable<double> VALOR_VENDA
		{
			get
			{
				return this._VALOR_VENDA;
			}
			set
			{
				if ((this._VALOR_VENDA != value))
				{
					this.OnVALOR_VENDAChanging(value);
					this.SendPropertyChanging();
					this._VALOR_VENDA = value;
					this.SendPropertyChanged("VALOR_VENDA");
					this.OnVALOR_VENDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALOR_REVENDA", DbType="Float")]
		public System.Nullable<double> VALOR_REVENDA
		{
			get
			{
				return this._VALOR_REVENDA;
			}
			set
			{
				if ((this._VALOR_REVENDA != value))
				{
					this.OnVALOR_REVENDAChanging(value);
					this.SendPropertyChanging();
					this._VALOR_REVENDA = value;
					this.SendPropertyChanged("VALOR_REVENDA");
					this.OnVALOR_REVENDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artigo_Artigo_Stock", Storage="_Artigo", ThisKey="ID_ARTIGO", OtherKey="ID", IsForeignKey=true)]
		public Artigo Artigo
		{
			get
			{
				return this._Artigo.Entity;
			}
			set
			{
				Artigo previousValue = this._Artigo.Entity;
				if (((previousValue != value) 
							|| (this._Artigo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artigo.Entity = null;
						previousValue.Artigo_Stocks.Remove(this);
					}
					this._Artigo.Entity = value;
					if ((value != null))
					{
						value.Artigo_Stocks.Add(this);
						this._ID_ARTIGO = value.ID;
					}
					else
					{
						this._ID_ARTIGO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Artigo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_Path> _aspnet_Paths;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths;
			}
			set
			{
				this._aspnet_Paths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
	public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public aspnet_Path()
		{
			this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
		{
			get
			{
				return this._aspnet_PersonalizationAllUser.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUser.Entity = null;
						previousValue.aspnet_Path = null;
					}
					this._aspnet_PersonalizationAllUser.Entity = value;
					if ((value != null))
					{
						value.aspnet_Path = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Paths.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
	public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationAllUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationAllUser = null;
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUser = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
	public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationPerUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntitySet<Funcionario> _Funcionarios;
		
		private EntitySet<Orcamento> _Orcamentos;
		
		private EntitySet<Orcamentos_Comentario> _Orcamentos_Comentarios;
		
		private EntitySet<Parceiro> _Parceiros;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._Funcionarios = new EntitySet<Funcionario>(new Action<Funcionario>(this.attach_Funcionarios), new Action<Funcionario>(this.detach_Funcionarios));
			this._Orcamentos = new EntitySet<Orcamento>(new Action<Orcamento>(this.attach_Orcamentos), new Action<Orcamento>(this.detach_Orcamentos));
			this._Orcamentos_Comentarios = new EntitySet<Orcamentos_Comentario>(new Action<Orcamentos_Comentario>(this.attach_Orcamentos_Comentarios), new Action<Orcamentos_Comentario>(this.detach_Orcamentos_Comentarios));
			this._Parceiros = new EntitySet<Parceiro>(new Action<Parceiro>(this.attach_Parceiros), new Action<Parceiro>(this.detach_Parceiros));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Funcionario", Storage="_Funcionarios", ThisKey="UserId", OtherKey="USERID")]
		public EntitySet<Funcionario> Funcionarios
		{
			get
			{
				return this._Funcionarios;
			}
			set
			{
				this._Funcionarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Orcamento", Storage="_Orcamentos", ThisKey="UserId", OtherKey="USERID")]
		public EntitySet<Orcamento> Orcamentos
		{
			get
			{
				return this._Orcamentos;
			}
			set
			{
				this._Orcamentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Orcamentos_Comentario", Storage="_Orcamentos_Comentarios", ThisKey="UserId", OtherKey="USERID_COMENTARIO")]
		public EntitySet<Orcamentos_Comentario> Orcamentos_Comentarios
		{
			get
			{
				return this._Orcamentos_Comentarios;
			}
			set
			{
				this._Orcamentos_Comentarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Parceiro", Storage="_Parceiros", ThisKey="UserId", OtherKey="USERID")]
		public EntitySet<Parceiro> Parceiros
		{
			get
			{
				return this._Parceiros;
			}
			set
			{
				this._Parceiros.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_Funcionarios(Funcionario entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_Funcionarios(Funcionario entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_Orcamentos(Orcamento entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_Orcamentos(Orcamento entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_Orcamentos_Comentarios(Orcamentos_Comentario entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_Orcamentos_Comentarios(Orcamentos_Comentario entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_Parceiros(Parceiro entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_Parceiros(Parceiro entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
	public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public aspnet_WebEvent_Event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Condicoes_Gerais")]
	public partial class Condicoes_Gerai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRICAO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    #endregion
		
		public Condicoes_Gerai()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Configuracao")]
	public partial class Configuracao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRICAO;
		
		private string _INICIAL;
		
		private System.Nullable<int> _CODIGO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    partial void OnINICIALChanging(string value);
    partial void OnINICIALChanged();
    partial void OnCODIGOChanging(System.Nullable<int> value);
    partial void OnCODIGOChanged();
    #endregion
		
		public Configuracao()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INICIAL", DbType="NVarChar(MAX)")]
		public string INICIAL
		{
			get
			{
				return this._INICIAL;
			}
			set
			{
				if ((this._INICIAL != value))
				{
					this.OnINICIALChanging(value);
					this.SendPropertyChanging();
					this._INICIAL = value;
					this.SendPropertyChanged("INICIAL");
					this.OnINICIALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGO", DbType="Int")]
		public System.Nullable<int> CODIGO
		{
			get
			{
				return this._CODIGO;
			}
			set
			{
				if ((this._CODIGO != value))
				{
					this.OnCODIGOChanging(value);
					this.SendPropertyChanging();
					this._CODIGO = value;
					this.SendPropertyChanged("CODIGO");
					this.OnCODIGOChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipamento_Avariado")]
	public partial class Equipamento_Avariado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_MARCA;
		
		private System.Nullable<int> _ID_MODELO;
		
		private string _IMEI;
		
		private string _NOVO_IMEI;
		
		private string _COD_SEGURANCA;
		
		private string _OBSERVACOES;
		
		private System.Nullable<System.DateTime> _DATA_REGISTO;
		
		private System.Nullable<System.DateTime> _DATA_ULTIMA_MODIFICACAO;
		
		private EntitySet<Orcamento> _Orcamentos;
		
		private EntitySet<Ordem_Reparacao> _Ordem_Reparacaos;
		
		private EntityRef<Marca> _Marca;
		
		private EntityRef<Modelo> _Modelo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_MARCAChanging(System.Nullable<int> value);
    partial void OnID_MARCAChanged();
    partial void OnID_MODELOChanging(System.Nullable<int> value);
    partial void OnID_MODELOChanged();
    partial void OnIMEIChanging(string value);
    partial void OnIMEIChanged();
    partial void OnNOVO_IMEIChanging(string value);
    partial void OnNOVO_IMEIChanged();
    partial void OnCOD_SEGURANCAChanging(string value);
    partial void OnCOD_SEGURANCAChanged();
    partial void OnOBSERVACOESChanging(string value);
    partial void OnOBSERVACOESChanged();
    partial void OnDATA_REGISTOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_REGISTOChanged();
    partial void OnDATA_ULTIMA_MODIFICACAOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_ULTIMA_MODIFICACAOChanged();
    #endregion
		
		public Equipamento_Avariado()
		{
			this._Orcamentos = new EntitySet<Orcamento>(new Action<Orcamento>(this.attach_Orcamentos), new Action<Orcamento>(this.detach_Orcamentos));
			this._Ordem_Reparacaos = new EntitySet<Ordem_Reparacao>(new Action<Ordem_Reparacao>(this.attach_Ordem_Reparacaos), new Action<Ordem_Reparacao>(this.detach_Ordem_Reparacaos));
			this._Marca = default(EntityRef<Marca>);
			this._Modelo = default(EntityRef<Modelo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MARCA", DbType="Int")]
		public System.Nullable<int> ID_MARCA
		{
			get
			{
				return this._ID_MARCA;
			}
			set
			{
				if ((this._ID_MARCA != value))
				{
					if (this._Marca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MARCAChanging(value);
					this.SendPropertyChanging();
					this._ID_MARCA = value;
					this.SendPropertyChanged("ID_MARCA");
					this.OnID_MARCAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MODELO", DbType="Int")]
		public System.Nullable<int> ID_MODELO
		{
			get
			{
				return this._ID_MODELO;
			}
			set
			{
				if ((this._ID_MODELO != value))
				{
					if (this._Modelo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MODELOChanging(value);
					this.SendPropertyChanging();
					this._ID_MODELO = value;
					this.SendPropertyChanged("ID_MODELO");
					this.OnID_MODELOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMEI", DbType="NVarChar(MAX)")]
		public string IMEI
		{
			get
			{
				return this._IMEI;
			}
			set
			{
				if ((this._IMEI != value))
				{
					this.OnIMEIChanging(value);
					this.SendPropertyChanging();
					this._IMEI = value;
					this.SendPropertyChanged("IMEI");
					this.OnIMEIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOVO_IMEI", DbType="NVarChar(MAX)")]
		public string NOVO_IMEI
		{
			get
			{
				return this._NOVO_IMEI;
			}
			set
			{
				if ((this._NOVO_IMEI != value))
				{
					this.OnNOVO_IMEIChanging(value);
					this.SendPropertyChanging();
					this._NOVO_IMEI = value;
					this.SendPropertyChanged("NOVO_IMEI");
					this.OnNOVO_IMEIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COD_SEGURANCA", DbType="NVarChar(MAX)")]
		public string COD_SEGURANCA
		{
			get
			{
				return this._COD_SEGURANCA;
			}
			set
			{
				if ((this._COD_SEGURANCA != value))
				{
					this.OnCOD_SEGURANCAChanging(value);
					this.SendPropertyChanging();
					this._COD_SEGURANCA = value;
					this.SendPropertyChanged("COD_SEGURANCA");
					this.OnCOD_SEGURANCAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACOES", DbType="NVarChar(MAX)")]
		public string OBSERVACOES
		{
			get
			{
				return this._OBSERVACOES;
			}
			set
			{
				if ((this._OBSERVACOES != value))
				{
					this.OnOBSERVACOESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACOES = value;
					this.SendPropertyChanged("OBSERVACOES");
					this.OnOBSERVACOESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_REGISTO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_REGISTO
		{
			get
			{
				return this._DATA_REGISTO;
			}
			set
			{
				if ((this._DATA_REGISTO != value))
				{
					this.OnDATA_REGISTOChanging(value);
					this.SendPropertyChanging();
					this._DATA_REGISTO = value;
					this.SendPropertyChanged("DATA_REGISTO");
					this.OnDATA_REGISTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_ULTIMA_MODIFICACAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_ULTIMA_MODIFICACAO
		{
			get
			{
				return this._DATA_ULTIMA_MODIFICACAO;
			}
			set
			{
				if ((this._DATA_ULTIMA_MODIFICACAO != value))
				{
					this.OnDATA_ULTIMA_MODIFICACAOChanging(value);
					this.SendPropertyChanging();
					this._DATA_ULTIMA_MODIFICACAO = value;
					this.SendPropertyChanged("DATA_ULTIMA_MODIFICACAO");
					this.OnDATA_ULTIMA_MODIFICACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_Orcamento", Storage="_Orcamentos", ThisKey="ID", OtherKey="ID_EQUIPAMENTO_AVARIADO")]
		public EntitySet<Orcamento> Orcamentos
		{
			get
			{
				return this._Orcamentos;
			}
			set
			{
				this._Orcamentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_Ordem_Reparacao", Storage="_Ordem_Reparacaos", ThisKey="ID", OtherKey="ID_EQUIPAMENTO_AVARIADO")]
		public EntitySet<Ordem_Reparacao> Ordem_Reparacaos
		{
			get
			{
				return this._Ordem_Reparacaos;
			}
			set
			{
				this._Ordem_Reparacaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Equipamento_Avariado", Storage="_Marca", ThisKey="ID_MARCA", OtherKey="ID", IsForeignKey=true)]
		public Marca Marca
		{
			get
			{
				return this._Marca.Entity;
			}
			set
			{
				Marca previousValue = this._Marca.Entity;
				if (((previousValue != value) 
							|| (this._Marca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marca.Entity = null;
						previousValue.Equipamento_Avariados.Remove(this);
					}
					this._Marca.Entity = value;
					if ((value != null))
					{
						value.Equipamento_Avariados.Add(this);
						this._ID_MARCA = value.ID;
					}
					else
					{
						this._ID_MARCA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Marca");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_Equipamento_Avariado", Storage="_Modelo", ThisKey="ID_MODELO", OtherKey="ID", IsForeignKey=true)]
		public Modelo Modelo
		{
			get
			{
				return this._Modelo.Entity;
			}
			set
			{
				Modelo previousValue = this._Modelo.Entity;
				if (((previousValue != value) 
							|| (this._Modelo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Modelo.Entity = null;
						previousValue.Equipamento_Avariados.Remove(this);
					}
					this._Modelo.Entity = value;
					if ((value != null))
					{
						value.Equipamento_Avariados.Add(this);
						this._ID_MODELO = value.ID;
					}
					else
					{
						this._ID_MODELO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Modelo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orcamentos(Orcamento entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado = this;
		}
		
		private void detach_Orcamentos(Orcamento entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado = null;
		}
		
		private void attach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado = this;
		}
		
		private void detach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipamento_Avariado_Acessorio")]
	public partial class Equipamento_Avariado_Acessorio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _BATERIA;
		
		private System.Nullable<bool> _CARREGADOR;
		
		private System.Nullable<bool> _CARTAO_MEM;
		
		private System.Nullable<bool> _CARTAO_SIM;
		
		private System.Nullable<bool> _BOLSA;
		
		private System.Nullable<bool> _CAIXA;
		
		private string _OUTROS;
		
		private string _OBSERVACOES;
		
		private EntitySet<Ordem_Reparacao> _Ordem_Reparacaos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBATERIAChanging(System.Nullable<bool> value);
    partial void OnBATERIAChanged();
    partial void OnCARREGADORChanging(System.Nullable<bool> value);
    partial void OnCARREGADORChanged();
    partial void OnCARTAO_MEMChanging(System.Nullable<bool> value);
    partial void OnCARTAO_MEMChanged();
    partial void OnCARTAO_SIMChanging(System.Nullable<bool> value);
    partial void OnCARTAO_SIMChanged();
    partial void OnBOLSAChanging(System.Nullable<bool> value);
    partial void OnBOLSAChanged();
    partial void OnCAIXAChanging(System.Nullable<bool> value);
    partial void OnCAIXAChanged();
    partial void OnOUTROSChanging(string value);
    partial void OnOUTROSChanged();
    partial void OnOBSERVACOESChanging(string value);
    partial void OnOBSERVACOESChanged();
    #endregion
		
		public Equipamento_Avariado_Acessorio()
		{
			this._Ordem_Reparacaos = new EntitySet<Ordem_Reparacao>(new Action<Ordem_Reparacao>(this.attach_Ordem_Reparacaos), new Action<Ordem_Reparacao>(this.detach_Ordem_Reparacaos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BATERIA", DbType="Bit")]
		public System.Nullable<bool> BATERIA
		{
			get
			{
				return this._BATERIA;
			}
			set
			{
				if ((this._BATERIA != value))
				{
					this.OnBATERIAChanging(value);
					this.SendPropertyChanging();
					this._BATERIA = value;
					this.SendPropertyChanged("BATERIA");
					this.OnBATERIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CARREGADOR", DbType="Bit")]
		public System.Nullable<bool> CARREGADOR
		{
			get
			{
				return this._CARREGADOR;
			}
			set
			{
				if ((this._CARREGADOR != value))
				{
					this.OnCARREGADORChanging(value);
					this.SendPropertyChanging();
					this._CARREGADOR = value;
					this.SendPropertyChanged("CARREGADOR");
					this.OnCARREGADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CARTAO_MEM", DbType="Bit")]
		public System.Nullable<bool> CARTAO_MEM
		{
			get
			{
				return this._CARTAO_MEM;
			}
			set
			{
				if ((this._CARTAO_MEM != value))
				{
					this.OnCARTAO_MEMChanging(value);
					this.SendPropertyChanging();
					this._CARTAO_MEM = value;
					this.SendPropertyChanged("CARTAO_MEM");
					this.OnCARTAO_MEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CARTAO_SIM", DbType="Bit")]
		public System.Nullable<bool> CARTAO_SIM
		{
			get
			{
				return this._CARTAO_SIM;
			}
			set
			{
				if ((this._CARTAO_SIM != value))
				{
					this.OnCARTAO_SIMChanging(value);
					this.SendPropertyChanging();
					this._CARTAO_SIM = value;
					this.SendPropertyChanged("CARTAO_SIM");
					this.OnCARTAO_SIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOLSA", DbType="Bit")]
		public System.Nullable<bool> BOLSA
		{
			get
			{
				return this._BOLSA;
			}
			set
			{
				if ((this._BOLSA != value))
				{
					this.OnBOLSAChanging(value);
					this.SendPropertyChanging();
					this._BOLSA = value;
					this.SendPropertyChanged("BOLSA");
					this.OnBOLSAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAIXA", DbType="Bit")]
		public System.Nullable<bool> CAIXA
		{
			get
			{
				return this._CAIXA;
			}
			set
			{
				if ((this._CAIXA != value))
				{
					this.OnCAIXAChanging(value);
					this.SendPropertyChanging();
					this._CAIXA = value;
					this.SendPropertyChanged("CAIXA");
					this.OnCAIXAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTROS", DbType="NVarChar(MAX)")]
		public string OUTROS
		{
			get
			{
				return this._OUTROS;
			}
			set
			{
				if ((this._OUTROS != value))
				{
					this.OnOUTROSChanging(value);
					this.SendPropertyChanging();
					this._OUTROS = value;
					this.SendPropertyChanged("OUTROS");
					this.OnOUTROSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACOES", DbType="NVarChar(MAX)")]
		public string OBSERVACOES
		{
			get
			{
				return this._OBSERVACOES;
			}
			set
			{
				if ((this._OBSERVACOES != value))
				{
					this.OnOBSERVACOESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACOES = value;
					this.SendPropertyChanged("OBSERVACOES");
					this.OnOBSERVACOESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_Acessorio_Ordem_Reparacao", Storage="_Ordem_Reparacaos", ThisKey="ID", OtherKey="ID_ACESSORIOS")]
		public EntitySet<Ordem_Reparacao> Ordem_Reparacaos
		{
			get
			{
				return this._Ordem_Reparacaos;
			}
			set
			{
				this._Ordem_Reparacaos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado_Acessorio = this;
		}
		
		private void detach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado_Acessorio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipamento_Avariado_Bloqueio")]
	public partial class Equipamento_Avariado_Bloqueio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _BLOQUEADO;
		
		private System.Nullable<int> _ID_OPERADORA;
		
		private string _OBSERVACOES;
		
		private EntitySet<Ordem_Reparacao> _Ordem_Reparacaos;
		
		private EntityRef<Operadora> _Operadora;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBLOQUEADOChanging(System.Nullable<bool> value);
    partial void OnBLOQUEADOChanged();
    partial void OnID_OPERADORAChanging(System.Nullable<int> value);
    partial void OnID_OPERADORAChanged();
    partial void OnOBSERVACOESChanging(string value);
    partial void OnOBSERVACOESChanged();
    #endregion
		
		public Equipamento_Avariado_Bloqueio()
		{
			this._Ordem_Reparacaos = new EntitySet<Ordem_Reparacao>(new Action<Ordem_Reparacao>(this.attach_Ordem_Reparacaos), new Action<Ordem_Reparacao>(this.detach_Ordem_Reparacaos));
			this._Operadora = default(EntityRef<Operadora>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLOQUEADO", DbType="Bit")]
		public System.Nullable<bool> BLOQUEADO
		{
			get
			{
				return this._BLOQUEADO;
			}
			set
			{
				if ((this._BLOQUEADO != value))
				{
					this.OnBLOQUEADOChanging(value);
					this.SendPropertyChanging();
					this._BLOQUEADO = value;
					this.SendPropertyChanged("BLOQUEADO");
					this.OnBLOQUEADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_OPERADORA", DbType="Int")]
		public System.Nullable<int> ID_OPERADORA
		{
			get
			{
				return this._ID_OPERADORA;
			}
			set
			{
				if ((this._ID_OPERADORA != value))
				{
					if (this._Operadora.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_OPERADORAChanging(value);
					this.SendPropertyChanging();
					this._ID_OPERADORA = value;
					this.SendPropertyChanged("ID_OPERADORA");
					this.OnID_OPERADORAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACOES", DbType="NVarChar(MAX)")]
		public string OBSERVACOES
		{
			get
			{
				return this._OBSERVACOES;
			}
			set
			{
				if ((this._OBSERVACOES != value))
				{
					this.OnOBSERVACOESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACOES = value;
					this.SendPropertyChanged("OBSERVACOES");
					this.OnOBSERVACOESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_Bloqueio_Ordem_Reparacao", Storage="_Ordem_Reparacaos", ThisKey="ID", OtherKey="ID_ESTADO_BLOQUEIO")]
		public EntitySet<Ordem_Reparacao> Ordem_Reparacaos
		{
			get
			{
				return this._Ordem_Reparacaos;
			}
			set
			{
				this._Ordem_Reparacaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operadora_Equipamento_Avariado_Bloqueio", Storage="_Operadora", ThisKey="ID_OPERADORA", OtherKey="ID", IsForeignKey=true)]
		public Operadora Operadora
		{
			get
			{
				return this._Operadora.Entity;
			}
			set
			{
				Operadora previousValue = this._Operadora.Entity;
				if (((previousValue != value) 
							|| (this._Operadora.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Operadora.Entity = null;
						previousValue.Equipamento_Avariado_Bloqueios.Remove(this);
					}
					this._Operadora.Entity = value;
					if ((value != null))
					{
						value.Equipamento_Avariado_Bloqueios.Add(this);
						this._ID_OPERADORA = value.ID;
					}
					else
					{
						this._ID_OPERADORA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Operadora");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado_Bloqueio = this;
		}
		
		private void detach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado_Bloqueio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipamento_Avariado_Garantia")]
	public partial class Equipamento_Avariado_Garantia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRICAO;
		
		private EntitySet<Equipamento_Avariado_GarantiaTipo> _Equipamento_Avariado_GarantiaTipos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    #endregion
		
		public Equipamento_Avariado_Garantia()
		{
			this._Equipamento_Avariado_GarantiaTipos = new EntitySet<Equipamento_Avariado_GarantiaTipo>(new Action<Equipamento_Avariado_GarantiaTipo>(this.attach_Equipamento_Avariado_GarantiaTipos), new Action<Equipamento_Avariado_GarantiaTipo>(this.detach_Equipamento_Avariado_GarantiaTipos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_Garantia_Equipamento_Avariado_GarantiaTipo", Storage="_Equipamento_Avariado_GarantiaTipos", ThisKey="ID", OtherKey="ID_TIPO_GARANTIA")]
		public EntitySet<Equipamento_Avariado_GarantiaTipo> Equipamento_Avariado_GarantiaTipos
		{
			get
			{
				return this._Equipamento_Avariado_GarantiaTipos;
			}
			set
			{
				this._Equipamento_Avariado_GarantiaTipos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Equipamento_Avariado_GarantiaTipos(Equipamento_Avariado_GarantiaTipo entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado_Garantia = this;
		}
		
		private void detach_Equipamento_Avariado_GarantiaTipos(Equipamento_Avariado_GarantiaTipo entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado_Garantia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipamento_Avariado_GarantiaTipo")]
	public partial class Equipamento_Avariado_GarantiaTipo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_TIPO_GARANTIA;
		
		private string _OBSERVACOES;
		
		private EntitySet<Ordem_Reparacao> _Ordem_Reparacaos;
		
		private EntityRef<Equipamento_Avariado_Garantia> _Equipamento_Avariado_Garantia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_TIPO_GARANTIAChanging(System.Nullable<int> value);
    partial void OnID_TIPO_GARANTIAChanged();
    partial void OnOBSERVACOESChanging(string value);
    partial void OnOBSERVACOESChanged();
    #endregion
		
		public Equipamento_Avariado_GarantiaTipo()
		{
			this._Ordem_Reparacaos = new EntitySet<Ordem_Reparacao>(new Action<Ordem_Reparacao>(this.attach_Ordem_Reparacaos), new Action<Ordem_Reparacao>(this.detach_Ordem_Reparacaos));
			this._Equipamento_Avariado_Garantia = default(EntityRef<Equipamento_Avariado_Garantia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIPO_GARANTIA", DbType="Int")]
		public System.Nullable<int> ID_TIPO_GARANTIA
		{
			get
			{
				return this._ID_TIPO_GARANTIA;
			}
			set
			{
				if ((this._ID_TIPO_GARANTIA != value))
				{
					if (this._Equipamento_Avariado_Garantia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIPO_GARANTIAChanging(value);
					this.SendPropertyChanging();
					this._ID_TIPO_GARANTIA = value;
					this.SendPropertyChanged("ID_TIPO_GARANTIA");
					this.OnID_TIPO_GARANTIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACOES", DbType="NVarChar(MAX)")]
		public string OBSERVACOES
		{
			get
			{
				return this._OBSERVACOES;
			}
			set
			{
				if ((this._OBSERVACOES != value))
				{
					this.OnOBSERVACOESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACOES = value;
					this.SendPropertyChanged("OBSERVACOES");
					this.OnOBSERVACOESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_GarantiaTipo_Ordem_Reparacao", Storage="_Ordem_Reparacaos", ThisKey="ID", OtherKey="ID_TIPO_GARANTIA")]
		public EntitySet<Ordem_Reparacao> Ordem_Reparacaos
		{
			get
			{
				return this._Ordem_Reparacaos;
			}
			set
			{
				this._Ordem_Reparacaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_Garantia_Equipamento_Avariado_GarantiaTipo", Storage="_Equipamento_Avariado_Garantia", ThisKey="ID_TIPO_GARANTIA", OtherKey="ID", IsForeignKey=true)]
		public Equipamento_Avariado_Garantia Equipamento_Avariado_Garantia
		{
			get
			{
				return this._Equipamento_Avariado_Garantia.Entity;
			}
			set
			{
				Equipamento_Avariado_Garantia previousValue = this._Equipamento_Avariado_Garantia.Entity;
				if (((previousValue != value) 
							|| (this._Equipamento_Avariado_Garantia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipamento_Avariado_Garantia.Entity = null;
						previousValue.Equipamento_Avariado_GarantiaTipos.Remove(this);
					}
					this._Equipamento_Avariado_Garantia.Entity = value;
					if ((value != null))
					{
						value.Equipamento_Avariado_GarantiaTipos.Add(this);
						this._ID_TIPO_GARANTIA = value.ID;
					}
					else
					{
						this._ID_TIPO_GARANTIA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Equipamento_Avariado_Garantia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado_GarantiaTipo = this;
		}
		
		private void detach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado_GarantiaTipo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipamento_Avariado_TimingReparacao")]
	public partial class Equipamento_Avariado_TimingReparacao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRICAO;
		
		private EntitySet<Ordem_Reparacao> _Ordem_Reparacaos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    #endregion
		
		public Equipamento_Avariado_TimingReparacao()
		{
			this._Ordem_Reparacaos = new EntitySet<Ordem_Reparacao>(new Action<Ordem_Reparacao>(this.attach_Ordem_Reparacaos), new Action<Ordem_Reparacao>(this.detach_Ordem_Reparacaos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_TimingReparacao_Ordem_Reparacao", Storage="_Ordem_Reparacaos", ThisKey="ID", OtherKey="ID_TIMING_REPARACAO")]
		public EntitySet<Ordem_Reparacao> Ordem_Reparacaos
		{
			get
			{
				return this._Ordem_Reparacaos;
			}
			set
			{
				this._Ordem_Reparacaos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado_TimingReparacao = this;
		}
		
		private void detach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado_TimingReparacao = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipamento_Avariado_TrabalhosAdicionais")]
	public partial class Equipamento_Avariado_TrabalhosAdicionai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _RESET_SOFTWARE;
		
		private System.Nullable<bool> _ACTUALIZACAO_SOFTWARE;
		
		private System.Nullable<bool> _REPARACAO_HARDWARE;
		
		private System.Nullable<bool> _LIMPEZA_GERAL;
		
		private System.Nullable<bool> _BACKUP_INFORMACAO;
		
		private string _OBSERVACOES;
		
		private EntitySet<Orcamento> _Orcamentos;
		
		private EntitySet<Ordem_Reparacao> _Ordem_Reparacaos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRESET_SOFTWAREChanging(System.Nullable<bool> value);
    partial void OnRESET_SOFTWAREChanged();
    partial void OnACTUALIZACAO_SOFTWAREChanging(System.Nullable<bool> value);
    partial void OnACTUALIZACAO_SOFTWAREChanged();
    partial void OnREPARACAO_HARDWAREChanging(System.Nullable<bool> value);
    partial void OnREPARACAO_HARDWAREChanged();
    partial void OnLIMPEZA_GERALChanging(System.Nullable<bool> value);
    partial void OnLIMPEZA_GERALChanged();
    partial void OnBACKUP_INFORMACAOChanging(System.Nullable<bool> value);
    partial void OnBACKUP_INFORMACAOChanged();
    partial void OnOBSERVACOESChanging(string value);
    partial void OnOBSERVACOESChanged();
    #endregion
		
		public Equipamento_Avariado_TrabalhosAdicionai()
		{
			this._Orcamentos = new EntitySet<Orcamento>(new Action<Orcamento>(this.attach_Orcamentos), new Action<Orcamento>(this.detach_Orcamentos));
			this._Ordem_Reparacaos = new EntitySet<Ordem_Reparacao>(new Action<Ordem_Reparacao>(this.attach_Ordem_Reparacaos), new Action<Ordem_Reparacao>(this.detach_Ordem_Reparacaos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESET_SOFTWARE", DbType="Bit")]
		public System.Nullable<bool> RESET_SOFTWARE
		{
			get
			{
				return this._RESET_SOFTWARE;
			}
			set
			{
				if ((this._RESET_SOFTWARE != value))
				{
					this.OnRESET_SOFTWAREChanging(value);
					this.SendPropertyChanging();
					this._RESET_SOFTWARE = value;
					this.SendPropertyChanged("RESET_SOFTWARE");
					this.OnRESET_SOFTWAREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTUALIZACAO_SOFTWARE", DbType="Bit")]
		public System.Nullable<bool> ACTUALIZACAO_SOFTWARE
		{
			get
			{
				return this._ACTUALIZACAO_SOFTWARE;
			}
			set
			{
				if ((this._ACTUALIZACAO_SOFTWARE != value))
				{
					this.OnACTUALIZACAO_SOFTWAREChanging(value);
					this.SendPropertyChanging();
					this._ACTUALIZACAO_SOFTWARE = value;
					this.SendPropertyChanged("ACTUALIZACAO_SOFTWARE");
					this.OnACTUALIZACAO_SOFTWAREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REPARACAO_HARDWARE", DbType="Bit")]
		public System.Nullable<bool> REPARACAO_HARDWARE
		{
			get
			{
				return this._REPARACAO_HARDWARE;
			}
			set
			{
				if ((this._REPARACAO_HARDWARE != value))
				{
					this.OnREPARACAO_HARDWAREChanging(value);
					this.SendPropertyChanging();
					this._REPARACAO_HARDWARE = value;
					this.SendPropertyChanged("REPARACAO_HARDWARE");
					this.OnREPARACAO_HARDWAREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIMPEZA_GERAL", DbType="Bit")]
		public System.Nullable<bool> LIMPEZA_GERAL
		{
			get
			{
				return this._LIMPEZA_GERAL;
			}
			set
			{
				if ((this._LIMPEZA_GERAL != value))
				{
					this.OnLIMPEZA_GERALChanging(value);
					this.SendPropertyChanging();
					this._LIMPEZA_GERAL = value;
					this.SendPropertyChanged("LIMPEZA_GERAL");
					this.OnLIMPEZA_GERALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BACKUP_INFORMACAO", DbType="Bit")]
		public System.Nullable<bool> BACKUP_INFORMACAO
		{
			get
			{
				return this._BACKUP_INFORMACAO;
			}
			set
			{
				if ((this._BACKUP_INFORMACAO != value))
				{
					this.OnBACKUP_INFORMACAOChanging(value);
					this.SendPropertyChanging();
					this._BACKUP_INFORMACAO = value;
					this.SendPropertyChanged("BACKUP_INFORMACAO");
					this.OnBACKUP_INFORMACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACOES", DbType="NVarChar(MAX)")]
		public string OBSERVACOES
		{
			get
			{
				return this._OBSERVACOES;
			}
			set
			{
				if ((this._OBSERVACOES != value))
				{
					this.OnOBSERVACOESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACOES = value;
					this.SendPropertyChanged("OBSERVACOES");
					this.OnOBSERVACOESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_TrabalhosAdicionai_Orcamento", Storage="_Orcamentos", ThisKey="ID", OtherKey="ID_TRABALHOS_ADICIONAIS")]
		public EntitySet<Orcamento> Orcamentos
		{
			get
			{
				return this._Orcamentos;
			}
			set
			{
				this._Orcamentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_TrabalhosAdicionai_Ordem_Reparacao", Storage="_Ordem_Reparacaos", ThisKey="ID", OtherKey="ID_TRABALHOS_ADICIONAIS")]
		public EntitySet<Ordem_Reparacao> Ordem_Reparacaos
		{
			get
			{
				return this._Ordem_Reparacaos;
			}
			set
			{
				this._Ordem_Reparacaos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orcamentos(Orcamento entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado_TrabalhosAdicionai = this;
		}
		
		private void detach_Orcamentos(Orcamento entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado_TrabalhosAdicionai = null;
		}
		
		private void attach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado_TrabalhosAdicionai = this;
		}
		
		private void detach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamento_Avariado_TrabalhosAdicionai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipamentos_Substituicao")]
	public partial class Equipamentos_Substituicao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_DISPONIBILIDADE;
		
		private string _CODIGO;
		
		private System.Nullable<int> _ID_MARCA;
		
		private System.Nullable<int> _ID_MODELO;
		
		private string _IMEI;
		
		private System.Nullable<bool> _BATERIA;
		
		private System.Nullable<bool> _CARTAO_SIM;
		
		private System.Nullable<bool> _CARTAO_MEMORIA;
		
		private System.Nullable<bool> _CARREGADOR;
		
		private System.Nullable<double> _VALOR;
		
		private string _OBSERVACAOES;
		
		private System.Nullable<System.DateTime> _DATA_REGISTO;
		
		private System.Nullable<System.DateTime> _DATA_ULTIMA_MODIFICACAO;
		
		private System.Nullable<bool> _ACTIVO;
		
		private EntitySet<Ordem_Reparacao> _Ordem_Reparacaos;
		
		private EntityRef<Equipamentos_Substituicao_Disponibilidade> _Equipamentos_Substituicao_Disponibilidade;
		
		private EntityRef<Marca> _Marca;
		
		private EntityRef<Modelo> _Modelo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_DISPONIBILIDADEChanging(System.Nullable<int> value);
    partial void OnID_DISPONIBILIDADEChanged();
    partial void OnCODIGOChanging(string value);
    partial void OnCODIGOChanged();
    partial void OnID_MARCAChanging(System.Nullable<int> value);
    partial void OnID_MARCAChanged();
    partial void OnID_MODELOChanging(System.Nullable<int> value);
    partial void OnID_MODELOChanged();
    partial void OnIMEIChanging(string value);
    partial void OnIMEIChanged();
    partial void OnBATERIAChanging(System.Nullable<bool> value);
    partial void OnBATERIAChanged();
    partial void OnCARTAO_SIMChanging(System.Nullable<bool> value);
    partial void OnCARTAO_SIMChanged();
    partial void OnCARTAO_MEMORIAChanging(System.Nullable<bool> value);
    partial void OnCARTAO_MEMORIAChanged();
    partial void OnCARREGADORChanging(System.Nullable<bool> value);
    partial void OnCARREGADORChanged();
    partial void OnVALORChanging(System.Nullable<double> value);
    partial void OnVALORChanged();
    partial void OnOBSERVACAOESChanging(string value);
    partial void OnOBSERVACAOESChanged();
    partial void OnDATA_REGISTOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_REGISTOChanged();
    partial void OnDATA_ULTIMA_MODIFICACAOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_ULTIMA_MODIFICACAOChanged();
    partial void OnACTIVOChanging(System.Nullable<bool> value);
    partial void OnACTIVOChanged();
    #endregion
		
		public Equipamentos_Substituicao()
		{
			this._Ordem_Reparacaos = new EntitySet<Ordem_Reparacao>(new Action<Ordem_Reparacao>(this.attach_Ordem_Reparacaos), new Action<Ordem_Reparacao>(this.detach_Ordem_Reparacaos));
			this._Equipamentos_Substituicao_Disponibilidade = default(EntityRef<Equipamentos_Substituicao_Disponibilidade>);
			this._Marca = default(EntityRef<Marca>);
			this._Modelo = default(EntityRef<Modelo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DISPONIBILIDADE", DbType="Int")]
		public System.Nullable<int> ID_DISPONIBILIDADE
		{
			get
			{
				return this._ID_DISPONIBILIDADE;
			}
			set
			{
				if ((this._ID_DISPONIBILIDADE != value))
				{
					if (this._Equipamentos_Substituicao_Disponibilidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DISPONIBILIDADEChanging(value);
					this.SendPropertyChanging();
					this._ID_DISPONIBILIDADE = value;
					this.SendPropertyChanged("ID_DISPONIBILIDADE");
					this.OnID_DISPONIBILIDADEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGO", DbType="NVarChar(MAX)")]
		public string CODIGO
		{
			get
			{
				return this._CODIGO;
			}
			set
			{
				if ((this._CODIGO != value))
				{
					this.OnCODIGOChanging(value);
					this.SendPropertyChanging();
					this._CODIGO = value;
					this.SendPropertyChanged("CODIGO");
					this.OnCODIGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MARCA", DbType="Int")]
		public System.Nullable<int> ID_MARCA
		{
			get
			{
				return this._ID_MARCA;
			}
			set
			{
				if ((this._ID_MARCA != value))
				{
					if (this._Marca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MARCAChanging(value);
					this.SendPropertyChanging();
					this._ID_MARCA = value;
					this.SendPropertyChanged("ID_MARCA");
					this.OnID_MARCAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MODELO", DbType="Int")]
		public System.Nullable<int> ID_MODELO
		{
			get
			{
				return this._ID_MODELO;
			}
			set
			{
				if ((this._ID_MODELO != value))
				{
					if (this._Modelo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MODELOChanging(value);
					this.SendPropertyChanging();
					this._ID_MODELO = value;
					this.SendPropertyChanged("ID_MODELO");
					this.OnID_MODELOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMEI", DbType="NVarChar(MAX)")]
		public string IMEI
		{
			get
			{
				return this._IMEI;
			}
			set
			{
				if ((this._IMEI != value))
				{
					this.OnIMEIChanging(value);
					this.SendPropertyChanging();
					this._IMEI = value;
					this.SendPropertyChanged("IMEI");
					this.OnIMEIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BATERIA", DbType="Bit")]
		public System.Nullable<bool> BATERIA
		{
			get
			{
				return this._BATERIA;
			}
			set
			{
				if ((this._BATERIA != value))
				{
					this.OnBATERIAChanging(value);
					this.SendPropertyChanging();
					this._BATERIA = value;
					this.SendPropertyChanged("BATERIA");
					this.OnBATERIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CARTAO_SIM", DbType="Bit")]
		public System.Nullable<bool> CARTAO_SIM
		{
			get
			{
				return this._CARTAO_SIM;
			}
			set
			{
				if ((this._CARTAO_SIM != value))
				{
					this.OnCARTAO_SIMChanging(value);
					this.SendPropertyChanging();
					this._CARTAO_SIM = value;
					this.SendPropertyChanged("CARTAO_SIM");
					this.OnCARTAO_SIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CARTAO_MEMORIA", DbType="Bit")]
		public System.Nullable<bool> CARTAO_MEMORIA
		{
			get
			{
				return this._CARTAO_MEMORIA;
			}
			set
			{
				if ((this._CARTAO_MEMORIA != value))
				{
					this.OnCARTAO_MEMORIAChanging(value);
					this.SendPropertyChanging();
					this._CARTAO_MEMORIA = value;
					this.SendPropertyChanged("CARTAO_MEMORIA");
					this.OnCARTAO_MEMORIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CARREGADOR", DbType="Bit")]
		public System.Nullable<bool> CARREGADOR
		{
			get
			{
				return this._CARREGADOR;
			}
			set
			{
				if ((this._CARREGADOR != value))
				{
					this.OnCARREGADORChanging(value);
					this.SendPropertyChanging();
					this._CARREGADOR = value;
					this.SendPropertyChanged("CARREGADOR");
					this.OnCARREGADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALOR", DbType="Float")]
		public System.Nullable<double> VALOR
		{
			get
			{
				return this._VALOR;
			}
			set
			{
				if ((this._VALOR != value))
				{
					this.OnVALORChanging(value);
					this.SendPropertyChanging();
					this._VALOR = value;
					this.SendPropertyChanged("VALOR");
					this.OnVALORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACAOES", DbType="NVarChar(MAX)")]
		public string OBSERVACAOES
		{
			get
			{
				return this._OBSERVACAOES;
			}
			set
			{
				if ((this._OBSERVACAOES != value))
				{
					this.OnOBSERVACAOESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACAOES = value;
					this.SendPropertyChanged("OBSERVACAOES");
					this.OnOBSERVACAOESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_REGISTO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_REGISTO
		{
			get
			{
				return this._DATA_REGISTO;
			}
			set
			{
				if ((this._DATA_REGISTO != value))
				{
					this.OnDATA_REGISTOChanging(value);
					this.SendPropertyChanging();
					this._DATA_REGISTO = value;
					this.SendPropertyChanged("DATA_REGISTO");
					this.OnDATA_REGISTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_ULTIMA_MODIFICACAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_ULTIMA_MODIFICACAO
		{
			get
			{
				return this._DATA_ULTIMA_MODIFICACAO;
			}
			set
			{
				if ((this._DATA_ULTIMA_MODIFICACAO != value))
				{
					this.OnDATA_ULTIMA_MODIFICACAOChanging(value);
					this.SendPropertyChanging();
					this._DATA_ULTIMA_MODIFICACAO = value;
					this.SendPropertyChanged("DATA_ULTIMA_MODIFICACAO");
					this.OnDATA_ULTIMA_MODIFICACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVO", DbType="Bit")]
		public System.Nullable<bool> ACTIVO
		{
			get
			{
				return this._ACTIVO;
			}
			set
			{
				if ((this._ACTIVO != value))
				{
					this.OnACTIVOChanging(value);
					this.SendPropertyChanging();
					this._ACTIVO = value;
					this.SendPropertyChanged("ACTIVO");
					this.OnACTIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamentos_Substituicao_Ordem_Reparacao", Storage="_Ordem_Reparacaos", ThisKey="ID", OtherKey="ID_EQUIPAMENTO_SUBSTITUICAO")]
		public EntitySet<Ordem_Reparacao> Ordem_Reparacaos
		{
			get
			{
				return this._Ordem_Reparacaos;
			}
			set
			{
				this._Ordem_Reparacaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamentos_Substituicao_Disponibilidade_Equipamentos_Substituicao", Storage="_Equipamentos_Substituicao_Disponibilidade", ThisKey="ID_DISPONIBILIDADE", OtherKey="ID", IsForeignKey=true)]
		public Equipamentos_Substituicao_Disponibilidade Equipamentos_Substituicao_Disponibilidade
		{
			get
			{
				return this._Equipamentos_Substituicao_Disponibilidade.Entity;
			}
			set
			{
				Equipamentos_Substituicao_Disponibilidade previousValue = this._Equipamentos_Substituicao_Disponibilidade.Entity;
				if (((previousValue != value) 
							|| (this._Equipamentos_Substituicao_Disponibilidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipamentos_Substituicao_Disponibilidade.Entity = null;
						previousValue.Equipamentos_Substituicaos.Remove(this);
					}
					this._Equipamentos_Substituicao_Disponibilidade.Entity = value;
					if ((value != null))
					{
						value.Equipamentos_Substituicaos.Add(this);
						this._ID_DISPONIBILIDADE = value.ID;
					}
					else
					{
						this._ID_DISPONIBILIDADE = default(Nullable<int>);
					}
					this.SendPropertyChanged("Equipamentos_Substituicao_Disponibilidade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Equipamentos_Substituicao", Storage="_Marca", ThisKey="ID_MARCA", OtherKey="ID", IsForeignKey=true)]
		public Marca Marca
		{
			get
			{
				return this._Marca.Entity;
			}
			set
			{
				Marca previousValue = this._Marca.Entity;
				if (((previousValue != value) 
							|| (this._Marca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marca.Entity = null;
						previousValue.Equipamentos_Substituicaos.Remove(this);
					}
					this._Marca.Entity = value;
					if ((value != null))
					{
						value.Equipamentos_Substituicaos.Add(this);
						this._ID_MARCA = value.ID;
					}
					else
					{
						this._ID_MARCA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Marca");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_Equipamentos_Substituicao", Storage="_Modelo", ThisKey="ID_MODELO", OtherKey="ID", IsForeignKey=true)]
		public Modelo Modelo
		{
			get
			{
				return this._Modelo.Entity;
			}
			set
			{
				Modelo previousValue = this._Modelo.Entity;
				if (((previousValue != value) 
							|| (this._Modelo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Modelo.Entity = null;
						previousValue.Equipamentos_Substituicaos.Remove(this);
					}
					this._Modelo.Entity = value;
					if ((value != null))
					{
						value.Equipamentos_Substituicaos.Add(this);
						this._ID_MODELO = value.ID;
					}
					else
					{
						this._ID_MODELO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Modelo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamentos_Substituicao = this;
		}
		
		private void detach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamentos_Substituicao = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipamentos_Substituicao_Disponibilidade")]
	public partial class Equipamentos_Substituicao_Disponibilidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRICAO;
		
		private EntitySet<Equipamentos_Substituicao> _Equipamentos_Substituicaos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    #endregion
		
		public Equipamentos_Substituicao_Disponibilidade()
		{
			this._Equipamentos_Substituicaos = new EntitySet<Equipamentos_Substituicao>(new Action<Equipamentos_Substituicao>(this.attach_Equipamentos_Substituicaos), new Action<Equipamentos_Substituicao>(this.detach_Equipamentos_Substituicaos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamentos_Substituicao_Disponibilidade_Equipamentos_Substituicao", Storage="_Equipamentos_Substituicaos", ThisKey="ID", OtherKey="ID_DISPONIBILIDADE")]
		public EntitySet<Equipamentos_Substituicao> Equipamentos_Substituicaos
		{
			get
			{
				return this._Equipamentos_Substituicaos;
			}
			set
			{
				this._Equipamentos_Substituicaos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Equipamentos_Substituicaos(Equipamentos_Substituicao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamentos_Substituicao_Disponibilidade = this;
		}
		
		private void detach_Equipamentos_Substituicaos(Equipamentos_Substituicao entity)
		{
			this.SendPropertyChanging();
			entity.Equipamentos_Substituicao_Disponibilidade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Funcionario")]
	public partial class Funcionario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _USERID;
		
		private System.Nullable<int> _ID_LOJA;
		
		private System.Nullable<int> _ID_TIPO_FUNCIONARIO;
		
		private string _CODIGO;
		
		private string _NOME;
		
		private string _EMAIL;
		
		private string _OBSERVACOES;
		
		private System.Nullable<System.DateTime> _DATA_REGISTO;
		
		private System.Nullable<System.DateTime> _DATA_ULTIMA_MODIFICACAO;
		
		private System.Nullable<System.DateTime> _DATA_VALIDADE_LOGIN;
		
		private System.Nullable<bool> _ACTIVO;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<Funcionario_Tipo> _Funcionario_Tipo;
		
		private EntityRef<Loja> _Loja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUSERIDChanging(System.Nullable<System.Guid> value);
    partial void OnUSERIDChanged();
    partial void OnID_LOJAChanging(System.Nullable<int> value);
    partial void OnID_LOJAChanged();
    partial void OnID_TIPO_FUNCIONARIOChanging(System.Nullable<int> value);
    partial void OnID_TIPO_FUNCIONARIOChanged();
    partial void OnCODIGOChanging(string value);
    partial void OnCODIGOChanged();
    partial void OnNOMEChanging(string value);
    partial void OnNOMEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnOBSERVACOESChanging(string value);
    partial void OnOBSERVACOESChanged();
    partial void OnDATA_REGISTOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_REGISTOChanged();
    partial void OnDATA_ULTIMA_MODIFICACAOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_ULTIMA_MODIFICACAOChanged();
    partial void OnDATA_VALIDADE_LOGINChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_VALIDADE_LOGINChanged();
    partial void OnACTIVOChanging(System.Nullable<bool> value);
    partial void OnACTIVOChanged();
    #endregion
		
		public Funcionario()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._Funcionario_Tipo = default(EntityRef<Funcionario_Tipo>);
			this._Loja = default(EntityRef<Loja>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOJA", DbType="Int")]
		public System.Nullable<int> ID_LOJA
		{
			get
			{
				return this._ID_LOJA;
			}
			set
			{
				if ((this._ID_LOJA != value))
				{
					if (this._Loja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOJAChanging(value);
					this.SendPropertyChanging();
					this._ID_LOJA = value;
					this.SendPropertyChanged("ID_LOJA");
					this.OnID_LOJAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIPO_FUNCIONARIO", DbType="Int")]
		public System.Nullable<int> ID_TIPO_FUNCIONARIO
		{
			get
			{
				return this._ID_TIPO_FUNCIONARIO;
			}
			set
			{
				if ((this._ID_TIPO_FUNCIONARIO != value))
				{
					if (this._Funcionario_Tipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIPO_FUNCIONARIOChanging(value);
					this.SendPropertyChanging();
					this._ID_TIPO_FUNCIONARIO = value;
					this.SendPropertyChanged("ID_TIPO_FUNCIONARIO");
					this.OnID_TIPO_FUNCIONARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGO", DbType="NVarChar(MAX)")]
		public string CODIGO
		{
			get
			{
				return this._CODIGO;
			}
			set
			{
				if ((this._CODIGO != value))
				{
					this.OnCODIGOChanging(value);
					this.SendPropertyChanging();
					this._CODIGO = value;
					this.SendPropertyChanged("CODIGO");
					this.OnCODIGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOME", DbType="NVarChar(MAX)")]
		public string NOME
		{
			get
			{
				return this._NOME;
			}
			set
			{
				if ((this._NOME != value))
				{
					this.OnNOMEChanging(value);
					this.SendPropertyChanging();
					this._NOME = value;
					this.SendPropertyChanged("NOME");
					this.OnNOMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(MAX)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACOES", DbType="NVarChar(MAX)")]
		public string OBSERVACOES
		{
			get
			{
				return this._OBSERVACOES;
			}
			set
			{
				if ((this._OBSERVACOES != value))
				{
					this.OnOBSERVACOESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACOES = value;
					this.SendPropertyChanged("OBSERVACOES");
					this.OnOBSERVACOESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_REGISTO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_REGISTO
		{
			get
			{
				return this._DATA_REGISTO;
			}
			set
			{
				if ((this._DATA_REGISTO != value))
				{
					this.OnDATA_REGISTOChanging(value);
					this.SendPropertyChanging();
					this._DATA_REGISTO = value;
					this.SendPropertyChanged("DATA_REGISTO");
					this.OnDATA_REGISTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_ULTIMA_MODIFICACAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_ULTIMA_MODIFICACAO
		{
			get
			{
				return this._DATA_ULTIMA_MODIFICACAO;
			}
			set
			{
				if ((this._DATA_ULTIMA_MODIFICACAO != value))
				{
					this.OnDATA_ULTIMA_MODIFICACAOChanging(value);
					this.SendPropertyChanging();
					this._DATA_ULTIMA_MODIFICACAO = value;
					this.SendPropertyChanged("DATA_ULTIMA_MODIFICACAO");
					this.OnDATA_ULTIMA_MODIFICACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_VALIDADE_LOGIN", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_VALIDADE_LOGIN
		{
			get
			{
				return this._DATA_VALIDADE_LOGIN;
			}
			set
			{
				if ((this._DATA_VALIDADE_LOGIN != value))
				{
					this.OnDATA_VALIDADE_LOGINChanging(value);
					this.SendPropertyChanging();
					this._DATA_VALIDADE_LOGIN = value;
					this.SendPropertyChanged("DATA_VALIDADE_LOGIN");
					this.OnDATA_VALIDADE_LOGINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVO", DbType="Bit")]
		public System.Nullable<bool> ACTIVO
		{
			get
			{
				return this._ACTIVO;
			}
			set
			{
				if ((this._ACTIVO != value))
				{
					this.OnACTIVOChanging(value);
					this.SendPropertyChanging();
					this._ACTIVO = value;
					this.SendPropertyChanged("ACTIVO");
					this.OnACTIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Funcionario", Storage="_aspnet_User", ThisKey="USERID", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.Funcionarios.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.Funcionarios.Add(this);
						this._USERID = value.UserId;
					}
					else
					{
						this._USERID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Funcionario_Tipo_Funcionario", Storage="_Funcionario_Tipo", ThisKey="ID_TIPO_FUNCIONARIO", OtherKey="ID", IsForeignKey=true)]
		public Funcionario_Tipo Funcionario_Tipo
		{
			get
			{
				return this._Funcionario_Tipo.Entity;
			}
			set
			{
				Funcionario_Tipo previousValue = this._Funcionario_Tipo.Entity;
				if (((previousValue != value) 
							|| (this._Funcionario_Tipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Funcionario_Tipo.Entity = null;
						previousValue.Funcionarios.Remove(this);
					}
					this._Funcionario_Tipo.Entity = value;
					if ((value != null))
					{
						value.Funcionarios.Add(this);
						this._ID_TIPO_FUNCIONARIO = value.ID;
					}
					else
					{
						this._ID_TIPO_FUNCIONARIO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Funcionario_Tipo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loja_Funcionario", Storage="_Loja", ThisKey="ID_LOJA", OtherKey="ID", IsForeignKey=true)]
		public Loja Loja
		{
			get
			{
				return this._Loja.Entity;
			}
			set
			{
				Loja previousValue = this._Loja.Entity;
				if (((previousValue != value) 
							|| (this._Loja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loja.Entity = null;
						previousValue.Funcionarios.Remove(this);
					}
					this._Loja.Entity = value;
					if ((value != null))
					{
						value.Funcionarios.Add(this);
						this._ID_LOJA = value.ID;
					}
					else
					{
						this._ID_LOJA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loja");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Funcionario_Tipo")]
	public partial class Funcionario_Tipo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRICAO;
		
		private EntitySet<Funcionario> _Funcionarios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    #endregion
		
		public Funcionario_Tipo()
		{
			this._Funcionarios = new EntitySet<Funcionario>(new Action<Funcionario>(this.attach_Funcionarios), new Action<Funcionario>(this.detach_Funcionarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Funcionario_Tipo_Funcionario", Storage="_Funcionarios", ThisKey="ID", OtherKey="ID_TIPO_FUNCIONARIO")]
		public EntitySet<Funcionario> Funcionarios
		{
			get
			{
				return this._Funcionarios;
			}
			set
			{
				this._Funcionarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Funcionarios(Funcionario entity)
		{
			this.SendPropertyChanging();
			entity.Funcionario_Tipo = this;
		}
		
		private void detach_Funcionarios(Funcionario entity)
		{
			this.SendPropertyChanging();
			entity.Funcionario_Tipo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _USERID;
		
		private System.DateTime _DATA;
		
		private string _MENU;
		
		private string _DESCRICAO;
		
		private bool _VISIVEL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUSERIDChanging(System.Guid value);
    partial void OnUSERIDChanged();
    partial void OnDATAChanging(System.DateTime value);
    partial void OnDATAChanged();
    partial void OnMENUChanging(string value);
    partial void OnMENUChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    partial void OnVISIVELChanging(bool value);
    partial void OnVISIVELChanged();
    #endregion
		
		public Log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA", DbType="DateTime NOT NULL")]
		public System.DateTime DATA
		{
			get
			{
				return this._DATA;
			}
			set
			{
				if ((this._DATA != value))
				{
					this.OnDATAChanging(value);
					this.SendPropertyChanging();
					this._DATA = value;
					this.SendPropertyChanged("DATA");
					this.OnDATAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MENU", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MENU
		{
			get
			{
				return this._MENU;
			}
			set
			{
				if ((this._MENU != value))
				{
					this.OnMENUChanging(value);
					this.SendPropertyChanging();
					this._MENU = value;
					this.SendPropertyChanged("MENU");
					this.OnMENUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VISIVEL", DbType="Bit NOT NULL")]
		public bool VISIVEL
		{
			get
			{
				return this._VISIVEL;
			}
			set
			{
				if ((this._VISIVEL != value))
				{
					this.OnVISIVELChanging(value);
					this.SendPropertyChanging();
					this._VISIVEL = value;
					this.SendPropertyChanged("VISIVEL");
					this.OnVISIVELChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loja")]
	public partial class Loja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CODIGO;
		
		private string _URL_FOTO;
		
		private string _NOME;
		
		private string _MORADA;
		
		private string _CODPOSTAL;
		
		private string _LOCALIDADE;
		
		private string _TELEFONE;
		
		private System.Nullable<int> _NIF;
		
		private string _FAX;
		
		private string _OBSERVACOES;
		
		private System.Nullable<bool> _ACTIVO;
		
		private EntitySet<Funcionario> _Funcionarios;
		
		private EntitySet<Orcamento> _Orcamentos;
		
		private EntitySet<Ordem_Reparacao> _Ordem_Reparacaos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODIGOChanging(string value);
    partial void OnCODIGOChanged();
    partial void OnURL_FOTOChanging(string value);
    partial void OnURL_FOTOChanged();
    partial void OnNOMEChanging(string value);
    partial void OnNOMEChanged();
    partial void OnMORADAChanging(string value);
    partial void OnMORADAChanged();
    partial void OnCODPOSTALChanging(string value);
    partial void OnCODPOSTALChanged();
    partial void OnLOCALIDADEChanging(string value);
    partial void OnLOCALIDADEChanged();
    partial void OnTELEFONEChanging(string value);
    partial void OnTELEFONEChanged();
    partial void OnNIFChanging(System.Nullable<int> value);
    partial void OnNIFChanged();
    partial void OnFAXChanging(string value);
    partial void OnFAXChanged();
    partial void OnOBSERVACOESChanging(string value);
    partial void OnOBSERVACOESChanged();
    partial void OnACTIVOChanging(System.Nullable<bool> value);
    partial void OnACTIVOChanged();
    #endregion
		
		public Loja()
		{
			this._Funcionarios = new EntitySet<Funcionario>(new Action<Funcionario>(this.attach_Funcionarios), new Action<Funcionario>(this.detach_Funcionarios));
			this._Orcamentos = new EntitySet<Orcamento>(new Action<Orcamento>(this.attach_Orcamentos), new Action<Orcamento>(this.detach_Orcamentos));
			this._Ordem_Reparacaos = new EntitySet<Ordem_Reparacao>(new Action<Ordem_Reparacao>(this.attach_Ordem_Reparacaos), new Action<Ordem_Reparacao>(this.detach_Ordem_Reparacaos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGO", DbType="NVarChar(MAX)")]
		public string CODIGO
		{
			get
			{
				return this._CODIGO;
			}
			set
			{
				if ((this._CODIGO != value))
				{
					this.OnCODIGOChanging(value);
					this.SendPropertyChanging();
					this._CODIGO = value;
					this.SendPropertyChanged("CODIGO");
					this.OnCODIGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL_FOTO", DbType="NVarChar(MAX)")]
		public string URL_FOTO
		{
			get
			{
				return this._URL_FOTO;
			}
			set
			{
				if ((this._URL_FOTO != value))
				{
					this.OnURL_FOTOChanging(value);
					this.SendPropertyChanging();
					this._URL_FOTO = value;
					this.SendPropertyChanged("URL_FOTO");
					this.OnURL_FOTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOME", DbType="NVarChar(MAX)")]
		public string NOME
		{
			get
			{
				return this._NOME;
			}
			set
			{
				if ((this._NOME != value))
				{
					this.OnNOMEChanging(value);
					this.SendPropertyChanging();
					this._NOME = value;
					this.SendPropertyChanged("NOME");
					this.OnNOMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MORADA", DbType="NVarChar(MAX)")]
		public string MORADA
		{
			get
			{
				return this._MORADA;
			}
			set
			{
				if ((this._MORADA != value))
				{
					this.OnMORADAChanging(value);
					this.SendPropertyChanging();
					this._MORADA = value;
					this.SendPropertyChanged("MORADA");
					this.OnMORADAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODPOSTAL", DbType="NVarChar(MAX)")]
		public string CODPOSTAL
		{
			get
			{
				return this._CODPOSTAL;
			}
			set
			{
				if ((this._CODPOSTAL != value))
				{
					this.OnCODPOSTALChanging(value);
					this.SendPropertyChanging();
					this._CODPOSTAL = value;
					this.SendPropertyChanged("CODPOSTAL");
					this.OnCODPOSTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCALIDADE", DbType="NVarChar(MAX)")]
		public string LOCALIDADE
		{
			get
			{
				return this._LOCALIDADE;
			}
			set
			{
				if ((this._LOCALIDADE != value))
				{
					this.OnLOCALIDADEChanging(value);
					this.SendPropertyChanging();
					this._LOCALIDADE = value;
					this.SendPropertyChanged("LOCALIDADE");
					this.OnLOCALIDADEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONE", DbType="NVarChar(MAX)")]
		public string TELEFONE
		{
			get
			{
				return this._TELEFONE;
			}
			set
			{
				if ((this._TELEFONE != value))
				{
					this.OnTELEFONEChanging(value);
					this.SendPropertyChanging();
					this._TELEFONE = value;
					this.SendPropertyChanged("TELEFONE");
					this.OnTELEFONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIF", DbType="Int")]
		public System.Nullable<int> NIF
		{
			get
			{
				return this._NIF;
			}
			set
			{
				if ((this._NIF != value))
				{
					this.OnNIFChanging(value);
					this.SendPropertyChanging();
					this._NIF = value;
					this.SendPropertyChanged("NIF");
					this.OnNIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAX", DbType="NVarChar(MAX)")]
		public string FAX
		{
			get
			{
				return this._FAX;
			}
			set
			{
				if ((this._FAX != value))
				{
					this.OnFAXChanging(value);
					this.SendPropertyChanging();
					this._FAX = value;
					this.SendPropertyChanged("FAX");
					this.OnFAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACOES", DbType="NVarChar(MAX)")]
		public string OBSERVACOES
		{
			get
			{
				return this._OBSERVACOES;
			}
			set
			{
				if ((this._OBSERVACOES != value))
				{
					this.OnOBSERVACOESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACOES = value;
					this.SendPropertyChanged("OBSERVACOES");
					this.OnOBSERVACOESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVO", DbType="Bit")]
		public System.Nullable<bool> ACTIVO
		{
			get
			{
				return this._ACTIVO;
			}
			set
			{
				if ((this._ACTIVO != value))
				{
					this.OnACTIVOChanging(value);
					this.SendPropertyChanging();
					this._ACTIVO = value;
					this.SendPropertyChanged("ACTIVO");
					this.OnACTIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loja_Funcionario", Storage="_Funcionarios", ThisKey="ID", OtherKey="ID_LOJA")]
		public EntitySet<Funcionario> Funcionarios
		{
			get
			{
				return this._Funcionarios;
			}
			set
			{
				this._Funcionarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loja_Orcamento", Storage="_Orcamentos", ThisKey="ID", OtherKey="ID_LOJA")]
		public EntitySet<Orcamento> Orcamentos
		{
			get
			{
				return this._Orcamentos;
			}
			set
			{
				this._Orcamentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loja_Ordem_Reparacao", Storage="_Ordem_Reparacaos", ThisKey="ID", OtherKey="ID_LOJA")]
		public EntitySet<Ordem_Reparacao> Ordem_Reparacaos
		{
			get
			{
				return this._Ordem_Reparacaos;
			}
			set
			{
				this._Ordem_Reparacaos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Funcionarios(Funcionario entity)
		{
			this.SendPropertyChanging();
			entity.Loja = this;
		}
		
		private void detach_Funcionarios(Funcionario entity)
		{
			this.SendPropertyChanging();
			entity.Loja = null;
		}
		
		private void attach_Orcamentos(Orcamento entity)
		{
			this.SendPropertyChanging();
			entity.Loja = this;
		}
		
		private void detach_Orcamentos(Orcamento entity)
		{
			this.SendPropertyChanging();
			entity.Loja = null;
		}
		
		private void attach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Loja = this;
		}
		
		private void detach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Loja = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Marca")]
	public partial class Marca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRICAO;
		
		private EntitySet<Equipamento_Avariado> _Equipamento_Avariados;
		
		private EntitySet<Equipamentos_Substituicao> _Equipamentos_Substituicaos;
		
		private EntitySet<Modelo> _Modelos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    #endregion
		
		public Marca()
		{
			this._Equipamento_Avariados = new EntitySet<Equipamento_Avariado>(new Action<Equipamento_Avariado>(this.attach_Equipamento_Avariados), new Action<Equipamento_Avariado>(this.detach_Equipamento_Avariados));
			this._Equipamentos_Substituicaos = new EntitySet<Equipamentos_Substituicao>(new Action<Equipamentos_Substituicao>(this.attach_Equipamentos_Substituicaos), new Action<Equipamentos_Substituicao>(this.detach_Equipamentos_Substituicaos));
			this._Modelos = new EntitySet<Modelo>(new Action<Modelo>(this.attach_Modelos), new Action<Modelo>(this.detach_Modelos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Equipamento_Avariado", Storage="_Equipamento_Avariados", ThisKey="ID", OtherKey="ID_MARCA")]
		public EntitySet<Equipamento_Avariado> Equipamento_Avariados
		{
			get
			{
				return this._Equipamento_Avariados;
			}
			set
			{
				this._Equipamento_Avariados.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Equipamentos_Substituicao", Storage="_Equipamentos_Substituicaos", ThisKey="ID", OtherKey="ID_MARCA")]
		public EntitySet<Equipamentos_Substituicao> Equipamentos_Substituicaos
		{
			get
			{
				return this._Equipamentos_Substituicaos;
			}
			set
			{
				this._Equipamentos_Substituicaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Modelo", Storage="_Modelos", ThisKey="ID", OtherKey="ID_MARCA")]
		public EntitySet<Modelo> Modelos
		{
			get
			{
				return this._Modelos;
			}
			set
			{
				this._Modelos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Equipamento_Avariados(Equipamento_Avariado entity)
		{
			this.SendPropertyChanging();
			entity.Marca = this;
		}
		
		private void detach_Equipamento_Avariados(Equipamento_Avariado entity)
		{
			this.SendPropertyChanging();
			entity.Marca = null;
		}
		
		private void attach_Equipamentos_Substituicaos(Equipamentos_Substituicao entity)
		{
			this.SendPropertyChanging();
			entity.Marca = this;
		}
		
		private void detach_Equipamentos_Substituicaos(Equipamentos_Substituicao entity)
		{
			this.SendPropertyChanging();
			entity.Marca = null;
		}
		
		private void attach_Modelos(Modelo entity)
		{
			this.SendPropertyChanging();
			entity.Marca = this;
		}
		
		private void detach_Modelos(Modelo entity)
		{
			this.SendPropertyChanging();
			entity.Marca = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Modelo")]
	public partial class Modelo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_MARCA;
		
		private string _DESCRICAO;
		
		private EntitySet<Equipamento_Avariado> _Equipamento_Avariados;
		
		private EntitySet<Equipamentos_Substituicao> _Equipamentos_Substituicaos;
		
		private EntityRef<Marca> _Marca;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_MARCAChanging(System.Nullable<int> value);
    partial void OnID_MARCAChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    #endregion
		
		public Modelo()
		{
			this._Equipamento_Avariados = new EntitySet<Equipamento_Avariado>(new Action<Equipamento_Avariado>(this.attach_Equipamento_Avariados), new Action<Equipamento_Avariado>(this.detach_Equipamento_Avariados));
			this._Equipamentos_Substituicaos = new EntitySet<Equipamentos_Substituicao>(new Action<Equipamentos_Substituicao>(this.attach_Equipamentos_Substituicaos), new Action<Equipamentos_Substituicao>(this.detach_Equipamentos_Substituicaos));
			this._Marca = default(EntityRef<Marca>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MARCA", DbType="Int")]
		public System.Nullable<int> ID_MARCA
		{
			get
			{
				return this._ID_MARCA;
			}
			set
			{
				if ((this._ID_MARCA != value))
				{
					if (this._Marca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MARCAChanging(value);
					this.SendPropertyChanging();
					this._ID_MARCA = value;
					this.SendPropertyChanged("ID_MARCA");
					this.OnID_MARCAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_Equipamento_Avariado", Storage="_Equipamento_Avariados", ThisKey="ID", OtherKey="ID_MODELO")]
		public EntitySet<Equipamento_Avariado> Equipamento_Avariados
		{
			get
			{
				return this._Equipamento_Avariados;
			}
			set
			{
				this._Equipamento_Avariados.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_Equipamentos_Substituicao", Storage="_Equipamentos_Substituicaos", ThisKey="ID", OtherKey="ID_MODELO")]
		public EntitySet<Equipamentos_Substituicao> Equipamentos_Substituicaos
		{
			get
			{
				return this._Equipamentos_Substituicaos;
			}
			set
			{
				this._Equipamentos_Substituicaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Modelo", Storage="_Marca", ThisKey="ID_MARCA", OtherKey="ID", IsForeignKey=true)]
		public Marca Marca
		{
			get
			{
				return this._Marca.Entity;
			}
			set
			{
				Marca previousValue = this._Marca.Entity;
				if (((previousValue != value) 
							|| (this._Marca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marca.Entity = null;
						previousValue.Modelos.Remove(this);
					}
					this._Marca.Entity = value;
					if ((value != null))
					{
						value.Modelos.Add(this);
						this._ID_MARCA = value.ID;
					}
					else
					{
						this._ID_MARCA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Marca");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Equipamento_Avariados(Equipamento_Avariado entity)
		{
			this.SendPropertyChanging();
			entity.Modelo = this;
		}
		
		private void detach_Equipamento_Avariados(Equipamento_Avariado entity)
		{
			this.SendPropertyChanging();
			entity.Modelo = null;
		}
		
		private void attach_Equipamentos_Substituicaos(Equipamentos_Substituicao entity)
		{
			this.SendPropertyChanging();
			entity.Modelo = this;
		}
		
		private void detach_Equipamentos_Substituicaos(Equipamentos_Substituicao entity)
		{
			this.SendPropertyChanging();
			entity.Modelo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Operadora")]
	public partial class Operadora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRICAO;
		
		private System.Nullable<bool> _ACTIVO;
		
		private EntitySet<Equipamento_Avariado_Bloqueio> _Equipamento_Avariado_Bloqueios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    partial void OnACTIVOChanging(System.Nullable<bool> value);
    partial void OnACTIVOChanged();
    #endregion
		
		public Operadora()
		{
			this._Equipamento_Avariado_Bloqueios = new EntitySet<Equipamento_Avariado_Bloqueio>(new Action<Equipamento_Avariado_Bloqueio>(this.attach_Equipamento_Avariado_Bloqueios), new Action<Equipamento_Avariado_Bloqueio>(this.detach_Equipamento_Avariado_Bloqueios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVO", DbType="Bit")]
		public System.Nullable<bool> ACTIVO
		{
			get
			{
				return this._ACTIVO;
			}
			set
			{
				if ((this._ACTIVO != value))
				{
					this.OnACTIVOChanging(value);
					this.SendPropertyChanging();
					this._ACTIVO = value;
					this.SendPropertyChanged("ACTIVO");
					this.OnACTIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operadora_Equipamento_Avariado_Bloqueio", Storage="_Equipamento_Avariado_Bloqueios", ThisKey="ID", OtherKey="ID_OPERADORA")]
		public EntitySet<Equipamento_Avariado_Bloqueio> Equipamento_Avariado_Bloqueios
		{
			get
			{
				return this._Equipamento_Avariado_Bloqueios;
			}
			set
			{
				this._Equipamento_Avariado_Bloqueios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Equipamento_Avariado_Bloqueios(Equipamento_Avariado_Bloqueio entity)
		{
			this.SendPropertyChanging();
			entity.Operadora = this;
		}
		
		private void detach_Equipamento_Avariado_Bloqueios(Equipamento_Avariado_Bloqueio entity)
		{
			this.SendPropertyChanging();
			entity.Operadora = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orcamentos")]
	public partial class Orcamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CODIGO;
		
		private System.Nullable<System.Guid> _USERID;
		
		private System.Nullable<int> _ID_LOJA;
		
		private System.Nullable<bool> _CLIENTE_NOTIFICADO;
		
		private System.Nullable<bool> _CLIENTE_ACEITOU;
		
		private System.Nullable<bool> _CLIENTE_REJEITOU;
		
		private System.Nullable<double> _VALOR_ORCAMENTO;
		
		private System.Nullable<int> _ID_EQUIPAMENTO_AVARIADO;
		
		private System.Nullable<int> _ID_ESTADO;
		
		private string _DESCRICAO_DETALHADA_AVARIA;
		
		private System.Nullable<int> _ID_TRABALHOS_ADICIONAIS;
		
		private System.Nullable<System.DateTime> _DATA_REGISTO;
		
		private System.Nullable<System.DateTime> _DATA_CONCLUSAO;
		
		private System.Nullable<System.DateTime> _DATA_ULTIMA_MODIFICACAO;
		
		private System.Nullable<bool> _CONVERTIDO_OR;
		
		private System.Nullable<int> _ID_OR_ORIGEM;
		
		private EntityRef<Orcamento> _Orcamento2;
		
		private EntitySet<Orcamentos_Comentario> _Orcamentos_Comentarios;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<Equipamento_Avariado> _Equipamento_Avariado;
		
		private EntityRef<Equipamento_Avariado_TrabalhosAdicionai> _Equipamento_Avariado_TrabalhosAdicionai;
		
		private EntityRef<Loja> _Loja;
		
		private EntityRef<Orcamento> _Orcamento1;
		
		private EntityRef<Orcamentos_Estado> _Orcamentos_Estado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODIGOChanging(string value);
    partial void OnCODIGOChanged();
    partial void OnUSERIDChanging(System.Nullable<System.Guid> value);
    partial void OnUSERIDChanged();
    partial void OnID_LOJAChanging(System.Nullable<int> value);
    partial void OnID_LOJAChanged();
    partial void OnCLIENTE_NOTIFICADOChanging(System.Nullable<bool> value);
    partial void OnCLIENTE_NOTIFICADOChanged();
    partial void OnCLIENTE_ACEITOUChanging(System.Nullable<bool> value);
    partial void OnCLIENTE_ACEITOUChanged();
    partial void OnCLIENTE_REJEITOUChanging(System.Nullable<bool> value);
    partial void OnCLIENTE_REJEITOUChanged();
    partial void OnVALOR_ORCAMENTOChanging(System.Nullable<double> value);
    partial void OnVALOR_ORCAMENTOChanged();
    partial void OnID_EQUIPAMENTO_AVARIADOChanging(System.Nullable<int> value);
    partial void OnID_EQUIPAMENTO_AVARIADOChanged();
    partial void OnID_ESTADOChanging(System.Nullable<int> value);
    partial void OnID_ESTADOChanged();
    partial void OnDESCRICAO_DETALHADA_AVARIAChanging(string value);
    partial void OnDESCRICAO_DETALHADA_AVARIAChanged();
    partial void OnID_TRABALHOS_ADICIONAISChanging(System.Nullable<int> value);
    partial void OnID_TRABALHOS_ADICIONAISChanged();
    partial void OnDATA_REGISTOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_REGISTOChanged();
    partial void OnDATA_CONCLUSAOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_CONCLUSAOChanged();
    partial void OnDATA_ULTIMA_MODIFICACAOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_ULTIMA_MODIFICACAOChanged();
    partial void OnCONVERTIDO_ORChanging(System.Nullable<bool> value);
    partial void OnCONVERTIDO_ORChanged();
    partial void OnID_OR_ORIGEMChanging(System.Nullable<int> value);
    partial void OnID_OR_ORIGEMChanged();
    #endregion
		
		public Orcamento()
		{
			this._Orcamento2 = default(EntityRef<Orcamento>);
			this._Orcamentos_Comentarios = new EntitySet<Orcamentos_Comentario>(new Action<Orcamentos_Comentario>(this.attach_Orcamentos_Comentarios), new Action<Orcamentos_Comentario>(this.detach_Orcamentos_Comentarios));
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._Equipamento_Avariado = default(EntityRef<Equipamento_Avariado>);
			this._Equipamento_Avariado_TrabalhosAdicionai = default(EntityRef<Equipamento_Avariado_TrabalhosAdicionai>);
			this._Loja = default(EntityRef<Loja>);
			this._Orcamento1 = default(EntityRef<Orcamento>);
			this._Orcamentos_Estado = default(EntityRef<Orcamentos_Estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Orcamento1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGO", DbType="NVarChar(MAX)")]
		public string CODIGO
		{
			get
			{
				return this._CODIGO;
			}
			set
			{
				if ((this._CODIGO != value))
				{
					this.OnCODIGOChanging(value);
					this.SendPropertyChanging();
					this._CODIGO = value;
					this.SendPropertyChanged("CODIGO");
					this.OnCODIGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOJA", DbType="Int")]
		public System.Nullable<int> ID_LOJA
		{
			get
			{
				return this._ID_LOJA;
			}
			set
			{
				if ((this._ID_LOJA != value))
				{
					if (this._Loja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOJAChanging(value);
					this.SendPropertyChanging();
					this._ID_LOJA = value;
					this.SendPropertyChanged("ID_LOJA");
					this.OnID_LOJAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTE_NOTIFICADO", DbType="Bit")]
		public System.Nullable<bool> CLIENTE_NOTIFICADO
		{
			get
			{
				return this._CLIENTE_NOTIFICADO;
			}
			set
			{
				if ((this._CLIENTE_NOTIFICADO != value))
				{
					this.OnCLIENTE_NOTIFICADOChanging(value);
					this.SendPropertyChanging();
					this._CLIENTE_NOTIFICADO = value;
					this.SendPropertyChanged("CLIENTE_NOTIFICADO");
					this.OnCLIENTE_NOTIFICADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTE_ACEITOU", DbType="Bit")]
		public System.Nullable<bool> CLIENTE_ACEITOU
		{
			get
			{
				return this._CLIENTE_ACEITOU;
			}
			set
			{
				if ((this._CLIENTE_ACEITOU != value))
				{
					this.OnCLIENTE_ACEITOUChanging(value);
					this.SendPropertyChanging();
					this._CLIENTE_ACEITOU = value;
					this.SendPropertyChanged("CLIENTE_ACEITOU");
					this.OnCLIENTE_ACEITOUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTE_REJEITOU", DbType="Bit")]
		public System.Nullable<bool> CLIENTE_REJEITOU
		{
			get
			{
				return this._CLIENTE_REJEITOU;
			}
			set
			{
				if ((this._CLIENTE_REJEITOU != value))
				{
					this.OnCLIENTE_REJEITOUChanging(value);
					this.SendPropertyChanging();
					this._CLIENTE_REJEITOU = value;
					this.SendPropertyChanged("CLIENTE_REJEITOU");
					this.OnCLIENTE_REJEITOUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALOR_ORCAMENTO", DbType="Float")]
		public System.Nullable<double> VALOR_ORCAMENTO
		{
			get
			{
				return this._VALOR_ORCAMENTO;
			}
			set
			{
				if ((this._VALOR_ORCAMENTO != value))
				{
					this.OnVALOR_ORCAMENTOChanging(value);
					this.SendPropertyChanging();
					this._VALOR_ORCAMENTO = value;
					this.SendPropertyChanged("VALOR_ORCAMENTO");
					this.OnVALOR_ORCAMENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_EQUIPAMENTO_AVARIADO", DbType="Int")]
		public System.Nullable<int> ID_EQUIPAMENTO_AVARIADO
		{
			get
			{
				return this._ID_EQUIPAMENTO_AVARIADO;
			}
			set
			{
				if ((this._ID_EQUIPAMENTO_AVARIADO != value))
				{
					if (this._Equipamento_Avariado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_EQUIPAMENTO_AVARIADOChanging(value);
					this.SendPropertyChanging();
					this._ID_EQUIPAMENTO_AVARIADO = value;
					this.SendPropertyChanged("ID_EQUIPAMENTO_AVARIADO");
					this.OnID_EQUIPAMENTO_AVARIADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADO", DbType="Int")]
		public System.Nullable<int> ID_ESTADO
		{
			get
			{
				return this._ID_ESTADO;
			}
			set
			{
				if ((this._ID_ESTADO != value))
				{
					if (this._Orcamentos_Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ESTADOChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADO = value;
					this.SendPropertyChanged("ID_ESTADO");
					this.OnID_ESTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO_DETALHADA_AVARIA", DbType="NVarChar(MAX)")]
		public string DESCRICAO_DETALHADA_AVARIA
		{
			get
			{
				return this._DESCRICAO_DETALHADA_AVARIA;
			}
			set
			{
				if ((this._DESCRICAO_DETALHADA_AVARIA != value))
				{
					this.OnDESCRICAO_DETALHADA_AVARIAChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO_DETALHADA_AVARIA = value;
					this.SendPropertyChanged("DESCRICAO_DETALHADA_AVARIA");
					this.OnDESCRICAO_DETALHADA_AVARIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TRABALHOS_ADICIONAIS", DbType="Int")]
		public System.Nullable<int> ID_TRABALHOS_ADICIONAIS
		{
			get
			{
				return this._ID_TRABALHOS_ADICIONAIS;
			}
			set
			{
				if ((this._ID_TRABALHOS_ADICIONAIS != value))
				{
					if (this._Equipamento_Avariado_TrabalhosAdicionai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TRABALHOS_ADICIONAISChanging(value);
					this.SendPropertyChanging();
					this._ID_TRABALHOS_ADICIONAIS = value;
					this.SendPropertyChanged("ID_TRABALHOS_ADICIONAIS");
					this.OnID_TRABALHOS_ADICIONAISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_REGISTO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_REGISTO
		{
			get
			{
				return this._DATA_REGISTO;
			}
			set
			{
				if ((this._DATA_REGISTO != value))
				{
					this.OnDATA_REGISTOChanging(value);
					this.SendPropertyChanging();
					this._DATA_REGISTO = value;
					this.SendPropertyChanged("DATA_REGISTO");
					this.OnDATA_REGISTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_CONCLUSAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_CONCLUSAO
		{
			get
			{
				return this._DATA_CONCLUSAO;
			}
			set
			{
				if ((this._DATA_CONCLUSAO != value))
				{
					this.OnDATA_CONCLUSAOChanging(value);
					this.SendPropertyChanging();
					this._DATA_CONCLUSAO = value;
					this.SendPropertyChanged("DATA_CONCLUSAO");
					this.OnDATA_CONCLUSAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_ULTIMA_MODIFICACAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_ULTIMA_MODIFICACAO
		{
			get
			{
				return this._DATA_ULTIMA_MODIFICACAO;
			}
			set
			{
				if ((this._DATA_ULTIMA_MODIFICACAO != value))
				{
					this.OnDATA_ULTIMA_MODIFICACAOChanging(value);
					this.SendPropertyChanging();
					this._DATA_ULTIMA_MODIFICACAO = value;
					this.SendPropertyChanged("DATA_ULTIMA_MODIFICACAO");
					this.OnDATA_ULTIMA_MODIFICACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONVERTIDO_OR", DbType="Bit")]
		public System.Nullable<bool> CONVERTIDO_OR
		{
			get
			{
				return this._CONVERTIDO_OR;
			}
			set
			{
				if ((this._CONVERTIDO_OR != value))
				{
					this.OnCONVERTIDO_ORChanging(value);
					this.SendPropertyChanging();
					this._CONVERTIDO_OR = value;
					this.SendPropertyChanged("CONVERTIDO_OR");
					this.OnCONVERTIDO_ORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_OR_ORIGEM", DbType="Int")]
		public System.Nullable<int> ID_OR_ORIGEM
		{
			get
			{
				return this._ID_OR_ORIGEM;
			}
			set
			{
				if ((this._ID_OR_ORIGEM != value))
				{
					this.OnID_OR_ORIGEMChanging(value);
					this.SendPropertyChanging();
					this._ID_OR_ORIGEM = value;
					this.SendPropertyChanged("ID_OR_ORIGEM");
					this.OnID_OR_ORIGEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orcamento_Orcamento", Storage="_Orcamento2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Orcamento Orcamento2
		{
			get
			{
				return this._Orcamento2.Entity;
			}
			set
			{
				Orcamento previousValue = this._Orcamento2.Entity;
				if (((previousValue != value) 
							|| (this._Orcamento2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orcamento2.Entity = null;
						previousValue.Orcamento1 = null;
					}
					this._Orcamento2.Entity = value;
					if ((value != null))
					{
						value.Orcamento1 = this;
					}
					this.SendPropertyChanged("Orcamento2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orcamento_Orcamentos_Comentario", Storage="_Orcamentos_Comentarios", ThisKey="ID", OtherKey="ID_ORCAMENTO")]
		public EntitySet<Orcamentos_Comentario> Orcamentos_Comentarios
		{
			get
			{
				return this._Orcamentos_Comentarios;
			}
			set
			{
				this._Orcamentos_Comentarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Orcamento", Storage="_aspnet_User", ThisKey="USERID", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.Orcamentos.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.Orcamentos.Add(this);
						this._USERID = value.UserId;
					}
					else
					{
						this._USERID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_Orcamento", Storage="_Equipamento_Avariado", ThisKey="ID_EQUIPAMENTO_AVARIADO", OtherKey="ID", IsForeignKey=true)]
		public Equipamento_Avariado Equipamento_Avariado
		{
			get
			{
				return this._Equipamento_Avariado.Entity;
			}
			set
			{
				Equipamento_Avariado previousValue = this._Equipamento_Avariado.Entity;
				if (((previousValue != value) 
							|| (this._Equipamento_Avariado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipamento_Avariado.Entity = null;
						previousValue.Orcamentos.Remove(this);
					}
					this._Equipamento_Avariado.Entity = value;
					if ((value != null))
					{
						value.Orcamentos.Add(this);
						this._ID_EQUIPAMENTO_AVARIADO = value.ID;
					}
					else
					{
						this._ID_EQUIPAMENTO_AVARIADO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Equipamento_Avariado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_TrabalhosAdicionai_Orcamento", Storage="_Equipamento_Avariado_TrabalhosAdicionai", ThisKey="ID_TRABALHOS_ADICIONAIS", OtherKey="ID", IsForeignKey=true)]
		public Equipamento_Avariado_TrabalhosAdicionai Equipamento_Avariado_TrabalhosAdicionai
		{
			get
			{
				return this._Equipamento_Avariado_TrabalhosAdicionai.Entity;
			}
			set
			{
				Equipamento_Avariado_TrabalhosAdicionai previousValue = this._Equipamento_Avariado_TrabalhosAdicionai.Entity;
				if (((previousValue != value) 
							|| (this._Equipamento_Avariado_TrabalhosAdicionai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipamento_Avariado_TrabalhosAdicionai.Entity = null;
						previousValue.Orcamentos.Remove(this);
					}
					this._Equipamento_Avariado_TrabalhosAdicionai.Entity = value;
					if ((value != null))
					{
						value.Orcamentos.Add(this);
						this._ID_TRABALHOS_ADICIONAIS = value.ID;
					}
					else
					{
						this._ID_TRABALHOS_ADICIONAIS = default(Nullable<int>);
					}
					this.SendPropertyChanged("Equipamento_Avariado_TrabalhosAdicionai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loja_Orcamento", Storage="_Loja", ThisKey="ID_LOJA", OtherKey="ID", IsForeignKey=true)]
		public Loja Loja
		{
			get
			{
				return this._Loja.Entity;
			}
			set
			{
				Loja previousValue = this._Loja.Entity;
				if (((previousValue != value) 
							|| (this._Loja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loja.Entity = null;
						previousValue.Orcamentos.Remove(this);
					}
					this._Loja.Entity = value;
					if ((value != null))
					{
						value.Orcamentos.Add(this);
						this._ID_LOJA = value.ID;
					}
					else
					{
						this._ID_LOJA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loja");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orcamento_Orcamento", Storage="_Orcamento1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public Orcamento Orcamento1
		{
			get
			{
				return this._Orcamento1.Entity;
			}
			set
			{
				Orcamento previousValue = this._Orcamento1.Entity;
				if (((previousValue != value) 
							|| (this._Orcamento1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orcamento1.Entity = null;
						previousValue.Orcamento2 = null;
					}
					this._Orcamento1.Entity = value;
					if ((value != null))
					{
						value.Orcamento2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Orcamento1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orcamentos_Estado_Orcamento", Storage="_Orcamentos_Estado", ThisKey="ID_ESTADO", OtherKey="ID", IsForeignKey=true)]
		public Orcamentos_Estado Orcamentos_Estado
		{
			get
			{
				return this._Orcamentos_Estado.Entity;
			}
			set
			{
				Orcamentos_Estado previousValue = this._Orcamentos_Estado.Entity;
				if (((previousValue != value) 
							|| (this._Orcamentos_Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orcamentos_Estado.Entity = null;
						previousValue.Orcamentos.Remove(this);
					}
					this._Orcamentos_Estado.Entity = value;
					if ((value != null))
					{
						value.Orcamentos.Add(this);
						this._ID_ESTADO = value.ID;
					}
					else
					{
						this._ID_ESTADO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Orcamentos_Estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orcamentos_Comentarios(Orcamentos_Comentario entity)
		{
			this.SendPropertyChanging();
			entity.Orcamento = this;
		}
		
		private void detach_Orcamentos_Comentarios(Orcamentos_Comentario entity)
		{
			this.SendPropertyChanging();
			entity.Orcamento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orcamentos_Comentarios")]
	public partial class Orcamentos_Comentario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.Guid> _USERID_COMENTARIO;
		
		private string _COMENTARIO;
		
		private System.Nullable<int> _ID_ORCAMENTO;
		
		private System.Nullable<System.DateTime> _DATA_COMENTARIO;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<Orcamento> _Orcamento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUSERID_COMENTARIOChanging(System.Nullable<System.Guid> value);
    partial void OnUSERID_COMENTARIOChanged();
    partial void OnCOMENTARIOChanging(string value);
    partial void OnCOMENTARIOChanged();
    partial void OnID_ORCAMENTOChanging(System.Nullable<int> value);
    partial void OnID_ORCAMENTOChanged();
    partial void OnDATA_COMENTARIOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_COMENTARIOChanged();
    #endregion
		
		public Orcamentos_Comentario()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._Orcamento = default(EntityRef<Orcamento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID_COMENTARIO", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> USERID_COMENTARIO
		{
			get
			{
				return this._USERID_COMENTARIO;
			}
			set
			{
				if ((this._USERID_COMENTARIO != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERID_COMENTARIOChanging(value);
					this.SendPropertyChanging();
					this._USERID_COMENTARIO = value;
					this.SendPropertyChanged("USERID_COMENTARIO");
					this.OnUSERID_COMENTARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMENTARIO", DbType="NVarChar(MAX)")]
		public string COMENTARIO
		{
			get
			{
				return this._COMENTARIO;
			}
			set
			{
				if ((this._COMENTARIO != value))
				{
					this.OnCOMENTARIOChanging(value);
					this.SendPropertyChanging();
					this._COMENTARIO = value;
					this.SendPropertyChanged("COMENTARIO");
					this.OnCOMENTARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ORCAMENTO", DbType="Int")]
		public System.Nullable<int> ID_ORCAMENTO
		{
			get
			{
				return this._ID_ORCAMENTO;
			}
			set
			{
				if ((this._ID_ORCAMENTO != value))
				{
					if (this._Orcamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ORCAMENTOChanging(value);
					this.SendPropertyChanging();
					this._ID_ORCAMENTO = value;
					this.SendPropertyChanged("ID_ORCAMENTO");
					this.OnID_ORCAMENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_COMENTARIO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_COMENTARIO
		{
			get
			{
				return this._DATA_COMENTARIO;
			}
			set
			{
				if ((this._DATA_COMENTARIO != value))
				{
					this.OnDATA_COMENTARIOChanging(value);
					this.SendPropertyChanging();
					this._DATA_COMENTARIO = value;
					this.SendPropertyChanged("DATA_COMENTARIO");
					this.OnDATA_COMENTARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Orcamentos_Comentario", Storage="_aspnet_User", ThisKey="USERID_COMENTARIO", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.Orcamentos_Comentarios.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.Orcamentos_Comentarios.Add(this);
						this._USERID_COMENTARIO = value.UserId;
					}
					else
					{
						this._USERID_COMENTARIO = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orcamento_Orcamentos_Comentario", Storage="_Orcamento", ThisKey="ID_ORCAMENTO", OtherKey="ID", IsForeignKey=true)]
		public Orcamento Orcamento
		{
			get
			{
				return this._Orcamento.Entity;
			}
			set
			{
				Orcamento previousValue = this._Orcamento.Entity;
				if (((previousValue != value) 
							|| (this._Orcamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orcamento.Entity = null;
						previousValue.Orcamentos_Comentarios.Remove(this);
					}
					this._Orcamento.Entity = value;
					if ((value != null))
					{
						value.Orcamentos_Comentarios.Add(this);
						this._ID_ORCAMENTO = value.ID;
					}
					else
					{
						this._ID_ORCAMENTO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Orcamento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orcamentos_Estado")]
	public partial class Orcamentos_Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRICAO;
		
		private EntitySet<Orcamento> _Orcamentos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    #endregion
		
		public Orcamentos_Estado()
		{
			this._Orcamentos = new EntitySet<Orcamento>(new Action<Orcamento>(this.attach_Orcamentos), new Action<Orcamento>(this.detach_Orcamentos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orcamentos_Estado_Orcamento", Storage="_Orcamentos", ThisKey="ID", OtherKey="ID_ESTADO")]
		public EntitySet<Orcamento> Orcamentos
		{
			get
			{
				return this._Orcamentos;
			}
			set
			{
				this._Orcamentos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orcamentos(Orcamento entity)
		{
			this.SendPropertyChanging();
			entity.Orcamentos_Estado = this;
		}
		
		private void detach_Orcamentos(Orcamento entity)
		{
			this.SendPropertyChanging();
			entity.Orcamentos_Estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ordem_Reparacao")]
	public partial class Ordem_Reparacao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CODIGO;
		
		private System.Nullable<System.Guid> _USERID;
		
		private System.Nullable<int> _ID_LOJA;
		
		private System.Nullable<bool> _ATRIBUIDA;
		
		private System.Nullable<bool> _CLIENTE_NOTIFICADO;
		
		private System.Nullable<double> _VALOR_CUSTO;
		
		private System.Nullable<double> _VALOR_FINAL;
		
		private System.Nullable<double> _VALOR_ADICIONAL_REPARACAO;
		
		private System.Nullable<double> _VALOR_PREVISTO_REPARACAO;
		
		private System.Nullable<int> _ID_EQUIPAMENTO_SUBSTITUICAO;
		
		private System.Nullable<int> _ID_EQUIPAMENTO_AVARIADO;
		
		private System.Nullable<int> _ID_ESTADO;
		
		private string _DESCRICAO_DETALHADA_PROBLEMA;
		
		private System.Nullable<int> _ID_TRABALHOS_ADICIONAIS;
		
		private System.Nullable<int> _ID_ESTADO_BLOQUEIO;
		
		private System.Nullable<int> _ID_ACESSORIOS;
		
		private System.Nullable<int> _ID_TIMING_REPARACAO;
		
		private System.Nullable<int> _ID_TIPO_GARANTIA;
		
		private System.Nullable<System.DateTime> _DATA_REGISTO;
		
		private System.Nullable<System.DateTime> _DATA_PREVISTA_CONCLUSAO;
		
		private System.Nullable<System.DateTime> _DATA_CONCLUSAO;
		
		private System.Nullable<System.DateTime> _DATA_ULTIMA_MODIFICACAO;
		
		private System.Nullable<System.DateTime> _DATA_LEVANTAMENTO_EQUIPAMENTO_AVARIADO;
		
		private EntitySet<Ordem_Reparacao_Artigo> _Ordem_Reparacao_Artigos;
		
		private EntitySet<Ordem_Reparacao_Atribuicao> _Ordem_Reparacao_Atribuicaos;
		
		private EntitySet<Ordem_Reparacao_MaoObra> _Ordem_Reparacao_MaoObras;
		
		private EntityRef<Equipamento_Avariado> _Equipamento_Avariado;
		
		private EntityRef<Equipamento_Avariado_Acessorio> _Equipamento_Avariado_Acessorio;
		
		private EntityRef<Equipamento_Avariado_Bloqueio> _Equipamento_Avariado_Bloqueio;
		
		private EntityRef<Equipamento_Avariado_GarantiaTipo> _Equipamento_Avariado_GarantiaTipo;
		
		private EntityRef<Equipamento_Avariado_TimingReparacao> _Equipamento_Avariado_TimingReparacao;
		
		private EntityRef<Equipamento_Avariado_TrabalhosAdicionai> _Equipamento_Avariado_TrabalhosAdicionai;
		
		private EntityRef<Equipamentos_Substituicao> _Equipamentos_Substituicao;
		
		private EntityRef<Loja> _Loja;
		
		private EntityRef<Ordem_Reparacao_Estado> _Ordem_Reparacao_Estado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODIGOChanging(string value);
    partial void OnCODIGOChanged();
    partial void OnUSERIDChanging(System.Nullable<System.Guid> value);
    partial void OnUSERIDChanged();
    partial void OnID_LOJAChanging(System.Nullable<int> value);
    partial void OnID_LOJAChanged();
    partial void OnATRIBUIDAChanging(System.Nullable<bool> value);
    partial void OnATRIBUIDAChanged();
    partial void OnCLIENTE_NOTIFICADOChanging(System.Nullable<bool> value);
    partial void OnCLIENTE_NOTIFICADOChanged();
    partial void OnVALOR_CUSTOChanging(System.Nullable<double> value);
    partial void OnVALOR_CUSTOChanged();
    partial void OnVALOR_FINALChanging(System.Nullable<double> value);
    partial void OnVALOR_FINALChanged();
    partial void OnVALOR_ADICIONAL_REPARACAOChanging(System.Nullable<double> value);
    partial void OnVALOR_ADICIONAL_REPARACAOChanged();
    partial void OnVALOR_PREVISTO_REPARACAOChanging(System.Nullable<double> value);
    partial void OnVALOR_PREVISTO_REPARACAOChanged();
    partial void OnID_EQUIPAMENTO_SUBSTITUICAOChanging(System.Nullable<int> value);
    partial void OnID_EQUIPAMENTO_SUBSTITUICAOChanged();
    partial void OnID_EQUIPAMENTO_AVARIADOChanging(System.Nullable<int> value);
    partial void OnID_EQUIPAMENTO_AVARIADOChanged();
    partial void OnID_ESTADOChanging(System.Nullable<int> value);
    partial void OnID_ESTADOChanged();
    partial void OnDESCRICAO_DETALHADA_PROBLEMAChanging(string value);
    partial void OnDESCRICAO_DETALHADA_PROBLEMAChanged();
    partial void OnID_TRABALHOS_ADICIONAISChanging(System.Nullable<int> value);
    partial void OnID_TRABALHOS_ADICIONAISChanged();
    partial void OnID_ESTADO_BLOQUEIOChanging(System.Nullable<int> value);
    partial void OnID_ESTADO_BLOQUEIOChanged();
    partial void OnID_ACESSORIOSChanging(System.Nullable<int> value);
    partial void OnID_ACESSORIOSChanged();
    partial void OnID_TIMING_REPARACAOChanging(System.Nullable<int> value);
    partial void OnID_TIMING_REPARACAOChanged();
    partial void OnID_TIPO_GARANTIAChanging(System.Nullable<int> value);
    partial void OnID_TIPO_GARANTIAChanged();
    partial void OnDATA_REGISTOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_REGISTOChanged();
    partial void OnDATA_PREVISTA_CONCLUSAOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_PREVISTA_CONCLUSAOChanged();
    partial void OnDATA_CONCLUSAOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_CONCLUSAOChanged();
    partial void OnDATA_ULTIMA_MODIFICACAOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_ULTIMA_MODIFICACAOChanged();
    partial void OnDATA_LEVANTAMENTO_EQUIPAMENTO_AVARIADOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_LEVANTAMENTO_EQUIPAMENTO_AVARIADOChanged();
    #endregion
		
		public Ordem_Reparacao()
		{
			this._Ordem_Reparacao_Artigos = new EntitySet<Ordem_Reparacao_Artigo>(new Action<Ordem_Reparacao_Artigo>(this.attach_Ordem_Reparacao_Artigos), new Action<Ordem_Reparacao_Artigo>(this.detach_Ordem_Reparacao_Artigos));
			this._Ordem_Reparacao_Atribuicaos = new EntitySet<Ordem_Reparacao_Atribuicao>(new Action<Ordem_Reparacao_Atribuicao>(this.attach_Ordem_Reparacao_Atribuicaos), new Action<Ordem_Reparacao_Atribuicao>(this.detach_Ordem_Reparacao_Atribuicaos));
			this._Ordem_Reparacao_MaoObras = new EntitySet<Ordem_Reparacao_MaoObra>(new Action<Ordem_Reparacao_MaoObra>(this.attach_Ordem_Reparacao_MaoObras), new Action<Ordem_Reparacao_MaoObra>(this.detach_Ordem_Reparacao_MaoObras));
			this._Equipamento_Avariado = default(EntityRef<Equipamento_Avariado>);
			this._Equipamento_Avariado_Acessorio = default(EntityRef<Equipamento_Avariado_Acessorio>);
			this._Equipamento_Avariado_Bloqueio = default(EntityRef<Equipamento_Avariado_Bloqueio>);
			this._Equipamento_Avariado_GarantiaTipo = default(EntityRef<Equipamento_Avariado_GarantiaTipo>);
			this._Equipamento_Avariado_TimingReparacao = default(EntityRef<Equipamento_Avariado_TimingReparacao>);
			this._Equipamento_Avariado_TrabalhosAdicionai = default(EntityRef<Equipamento_Avariado_TrabalhosAdicionai>);
			this._Equipamentos_Substituicao = default(EntityRef<Equipamentos_Substituicao>);
			this._Loja = default(EntityRef<Loja>);
			this._Ordem_Reparacao_Estado = default(EntityRef<Ordem_Reparacao_Estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGO", DbType="NVarChar(MAX)")]
		public string CODIGO
		{
			get
			{
				return this._CODIGO;
			}
			set
			{
				if ((this._CODIGO != value))
				{
					this.OnCODIGOChanging(value);
					this.SendPropertyChanging();
					this._CODIGO = value;
					this.SendPropertyChanged("CODIGO");
					this.OnCODIGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOJA", DbType="Int")]
		public System.Nullable<int> ID_LOJA
		{
			get
			{
				return this._ID_LOJA;
			}
			set
			{
				if ((this._ID_LOJA != value))
				{
					if (this._Loja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOJAChanging(value);
					this.SendPropertyChanging();
					this._ID_LOJA = value;
					this.SendPropertyChanged("ID_LOJA");
					this.OnID_LOJAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ATRIBUIDA", DbType="Bit")]
		public System.Nullable<bool> ATRIBUIDA
		{
			get
			{
				return this._ATRIBUIDA;
			}
			set
			{
				if ((this._ATRIBUIDA != value))
				{
					this.OnATRIBUIDAChanging(value);
					this.SendPropertyChanging();
					this._ATRIBUIDA = value;
					this.SendPropertyChanged("ATRIBUIDA");
					this.OnATRIBUIDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTE_NOTIFICADO", DbType="Bit")]
		public System.Nullable<bool> CLIENTE_NOTIFICADO
		{
			get
			{
				return this._CLIENTE_NOTIFICADO;
			}
			set
			{
				if ((this._CLIENTE_NOTIFICADO != value))
				{
					this.OnCLIENTE_NOTIFICADOChanging(value);
					this.SendPropertyChanging();
					this._CLIENTE_NOTIFICADO = value;
					this.SendPropertyChanged("CLIENTE_NOTIFICADO");
					this.OnCLIENTE_NOTIFICADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALOR_CUSTO", DbType="Float")]
		public System.Nullable<double> VALOR_CUSTO
		{
			get
			{
				return this._VALOR_CUSTO;
			}
			set
			{
				if ((this._VALOR_CUSTO != value))
				{
					this.OnVALOR_CUSTOChanging(value);
					this.SendPropertyChanging();
					this._VALOR_CUSTO = value;
					this.SendPropertyChanged("VALOR_CUSTO");
					this.OnVALOR_CUSTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALOR_FINAL", DbType="Float")]
		public System.Nullable<double> VALOR_FINAL
		{
			get
			{
				return this._VALOR_FINAL;
			}
			set
			{
				if ((this._VALOR_FINAL != value))
				{
					this.OnVALOR_FINALChanging(value);
					this.SendPropertyChanging();
					this._VALOR_FINAL = value;
					this.SendPropertyChanged("VALOR_FINAL");
					this.OnVALOR_FINALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALOR_ADICIONAL_REPARACAO", DbType="Float")]
		public System.Nullable<double> VALOR_ADICIONAL_REPARACAO
		{
			get
			{
				return this._VALOR_ADICIONAL_REPARACAO;
			}
			set
			{
				if ((this._VALOR_ADICIONAL_REPARACAO != value))
				{
					this.OnVALOR_ADICIONAL_REPARACAOChanging(value);
					this.SendPropertyChanging();
					this._VALOR_ADICIONAL_REPARACAO = value;
					this.SendPropertyChanged("VALOR_ADICIONAL_REPARACAO");
					this.OnVALOR_ADICIONAL_REPARACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALOR_PREVISTO_REPARACAO", DbType="Float")]
		public System.Nullable<double> VALOR_PREVISTO_REPARACAO
		{
			get
			{
				return this._VALOR_PREVISTO_REPARACAO;
			}
			set
			{
				if ((this._VALOR_PREVISTO_REPARACAO != value))
				{
					this.OnVALOR_PREVISTO_REPARACAOChanging(value);
					this.SendPropertyChanging();
					this._VALOR_PREVISTO_REPARACAO = value;
					this.SendPropertyChanged("VALOR_PREVISTO_REPARACAO");
					this.OnVALOR_PREVISTO_REPARACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_EQUIPAMENTO_SUBSTITUICAO", DbType="Int")]
		public System.Nullable<int> ID_EQUIPAMENTO_SUBSTITUICAO
		{
			get
			{
				return this._ID_EQUIPAMENTO_SUBSTITUICAO;
			}
			set
			{
				if ((this._ID_EQUIPAMENTO_SUBSTITUICAO != value))
				{
					if (this._Equipamentos_Substituicao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_EQUIPAMENTO_SUBSTITUICAOChanging(value);
					this.SendPropertyChanging();
					this._ID_EQUIPAMENTO_SUBSTITUICAO = value;
					this.SendPropertyChanged("ID_EQUIPAMENTO_SUBSTITUICAO");
					this.OnID_EQUIPAMENTO_SUBSTITUICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_EQUIPAMENTO_AVARIADO", DbType="Int")]
		public System.Nullable<int> ID_EQUIPAMENTO_AVARIADO
		{
			get
			{
				return this._ID_EQUIPAMENTO_AVARIADO;
			}
			set
			{
				if ((this._ID_EQUIPAMENTO_AVARIADO != value))
				{
					if (this._Equipamento_Avariado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_EQUIPAMENTO_AVARIADOChanging(value);
					this.SendPropertyChanging();
					this._ID_EQUIPAMENTO_AVARIADO = value;
					this.SendPropertyChanged("ID_EQUIPAMENTO_AVARIADO");
					this.OnID_EQUIPAMENTO_AVARIADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADO", DbType="Int")]
		public System.Nullable<int> ID_ESTADO
		{
			get
			{
				return this._ID_ESTADO;
			}
			set
			{
				if ((this._ID_ESTADO != value))
				{
					if (this._Ordem_Reparacao_Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ESTADOChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADO = value;
					this.SendPropertyChanged("ID_ESTADO");
					this.OnID_ESTADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO_DETALHADA_PROBLEMA", DbType="NVarChar(MAX)")]
		public string DESCRICAO_DETALHADA_PROBLEMA
		{
			get
			{
				return this._DESCRICAO_DETALHADA_PROBLEMA;
			}
			set
			{
				if ((this._DESCRICAO_DETALHADA_PROBLEMA != value))
				{
					this.OnDESCRICAO_DETALHADA_PROBLEMAChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO_DETALHADA_PROBLEMA = value;
					this.SendPropertyChanged("DESCRICAO_DETALHADA_PROBLEMA");
					this.OnDESCRICAO_DETALHADA_PROBLEMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TRABALHOS_ADICIONAIS", DbType="Int")]
		public System.Nullable<int> ID_TRABALHOS_ADICIONAIS
		{
			get
			{
				return this._ID_TRABALHOS_ADICIONAIS;
			}
			set
			{
				if ((this._ID_TRABALHOS_ADICIONAIS != value))
				{
					if (this._Equipamento_Avariado_TrabalhosAdicionai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TRABALHOS_ADICIONAISChanging(value);
					this.SendPropertyChanging();
					this._ID_TRABALHOS_ADICIONAIS = value;
					this.SendPropertyChanged("ID_TRABALHOS_ADICIONAIS");
					this.OnID_TRABALHOS_ADICIONAISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ESTADO_BLOQUEIO", DbType="Int")]
		public System.Nullable<int> ID_ESTADO_BLOQUEIO
		{
			get
			{
				return this._ID_ESTADO_BLOQUEIO;
			}
			set
			{
				if ((this._ID_ESTADO_BLOQUEIO != value))
				{
					if (this._Equipamento_Avariado_Bloqueio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ESTADO_BLOQUEIOChanging(value);
					this.SendPropertyChanging();
					this._ID_ESTADO_BLOQUEIO = value;
					this.SendPropertyChanged("ID_ESTADO_BLOQUEIO");
					this.OnID_ESTADO_BLOQUEIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ACESSORIOS", DbType="Int")]
		public System.Nullable<int> ID_ACESSORIOS
		{
			get
			{
				return this._ID_ACESSORIOS;
			}
			set
			{
				if ((this._ID_ACESSORIOS != value))
				{
					if (this._Equipamento_Avariado_Acessorio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ACESSORIOSChanging(value);
					this.SendPropertyChanging();
					this._ID_ACESSORIOS = value;
					this.SendPropertyChanged("ID_ACESSORIOS");
					this.OnID_ACESSORIOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIMING_REPARACAO", DbType="Int")]
		public System.Nullable<int> ID_TIMING_REPARACAO
		{
			get
			{
				return this._ID_TIMING_REPARACAO;
			}
			set
			{
				if ((this._ID_TIMING_REPARACAO != value))
				{
					if (this._Equipamento_Avariado_TimingReparacao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIMING_REPARACAOChanging(value);
					this.SendPropertyChanging();
					this._ID_TIMING_REPARACAO = value;
					this.SendPropertyChanged("ID_TIMING_REPARACAO");
					this.OnID_TIMING_REPARACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIPO_GARANTIA", DbType="Int")]
		public System.Nullable<int> ID_TIPO_GARANTIA
		{
			get
			{
				return this._ID_TIPO_GARANTIA;
			}
			set
			{
				if ((this._ID_TIPO_GARANTIA != value))
				{
					if (this._Equipamento_Avariado_GarantiaTipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIPO_GARANTIAChanging(value);
					this.SendPropertyChanging();
					this._ID_TIPO_GARANTIA = value;
					this.SendPropertyChanged("ID_TIPO_GARANTIA");
					this.OnID_TIPO_GARANTIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_REGISTO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_REGISTO
		{
			get
			{
				return this._DATA_REGISTO;
			}
			set
			{
				if ((this._DATA_REGISTO != value))
				{
					this.OnDATA_REGISTOChanging(value);
					this.SendPropertyChanging();
					this._DATA_REGISTO = value;
					this.SendPropertyChanged("DATA_REGISTO");
					this.OnDATA_REGISTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_PREVISTA_CONCLUSAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_PREVISTA_CONCLUSAO
		{
			get
			{
				return this._DATA_PREVISTA_CONCLUSAO;
			}
			set
			{
				if ((this._DATA_PREVISTA_CONCLUSAO != value))
				{
					this.OnDATA_PREVISTA_CONCLUSAOChanging(value);
					this.SendPropertyChanging();
					this._DATA_PREVISTA_CONCLUSAO = value;
					this.SendPropertyChanged("DATA_PREVISTA_CONCLUSAO");
					this.OnDATA_PREVISTA_CONCLUSAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_CONCLUSAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_CONCLUSAO
		{
			get
			{
				return this._DATA_CONCLUSAO;
			}
			set
			{
				if ((this._DATA_CONCLUSAO != value))
				{
					this.OnDATA_CONCLUSAOChanging(value);
					this.SendPropertyChanging();
					this._DATA_CONCLUSAO = value;
					this.SendPropertyChanged("DATA_CONCLUSAO");
					this.OnDATA_CONCLUSAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_ULTIMA_MODIFICACAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_ULTIMA_MODIFICACAO
		{
			get
			{
				return this._DATA_ULTIMA_MODIFICACAO;
			}
			set
			{
				if ((this._DATA_ULTIMA_MODIFICACAO != value))
				{
					this.OnDATA_ULTIMA_MODIFICACAOChanging(value);
					this.SendPropertyChanging();
					this._DATA_ULTIMA_MODIFICACAO = value;
					this.SendPropertyChanged("DATA_ULTIMA_MODIFICACAO");
					this.OnDATA_ULTIMA_MODIFICACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_LEVANTAMENTO_EQUIPAMENTO_AVARIADO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_LEVANTAMENTO_EQUIPAMENTO_AVARIADO
		{
			get
			{
				return this._DATA_LEVANTAMENTO_EQUIPAMENTO_AVARIADO;
			}
			set
			{
				if ((this._DATA_LEVANTAMENTO_EQUIPAMENTO_AVARIADO != value))
				{
					this.OnDATA_LEVANTAMENTO_EQUIPAMENTO_AVARIADOChanging(value);
					this.SendPropertyChanging();
					this._DATA_LEVANTAMENTO_EQUIPAMENTO_AVARIADO = value;
					this.SendPropertyChanged("DATA_LEVANTAMENTO_EQUIPAMENTO_AVARIADO");
					this.OnDATA_LEVANTAMENTO_EQUIPAMENTO_AVARIADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ordem_Reparacao_Ordem_Reparacao_Artigo", Storage="_Ordem_Reparacao_Artigos", ThisKey="ID", OtherKey="ID_ORDEM_REPARACAO")]
		public EntitySet<Ordem_Reparacao_Artigo> Ordem_Reparacao_Artigos
		{
			get
			{
				return this._Ordem_Reparacao_Artigos;
			}
			set
			{
				this._Ordem_Reparacao_Artigos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ordem_Reparacao_Ordem_Reparacao_Atribuicao", Storage="_Ordem_Reparacao_Atribuicaos", ThisKey="ID", OtherKey="ID_ORDEM_REPARACAO")]
		public EntitySet<Ordem_Reparacao_Atribuicao> Ordem_Reparacao_Atribuicaos
		{
			get
			{
				return this._Ordem_Reparacao_Atribuicaos;
			}
			set
			{
				this._Ordem_Reparacao_Atribuicaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ordem_Reparacao_Ordem_Reparacao_MaoObra", Storage="_Ordem_Reparacao_MaoObras", ThisKey="ID", OtherKey="ID_ORDEM_REPARACAO")]
		public EntitySet<Ordem_Reparacao_MaoObra> Ordem_Reparacao_MaoObras
		{
			get
			{
				return this._Ordem_Reparacao_MaoObras;
			}
			set
			{
				this._Ordem_Reparacao_MaoObras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_Ordem_Reparacao", Storage="_Equipamento_Avariado", ThisKey="ID_EQUIPAMENTO_AVARIADO", OtherKey="ID", IsForeignKey=true)]
		public Equipamento_Avariado Equipamento_Avariado
		{
			get
			{
				return this._Equipamento_Avariado.Entity;
			}
			set
			{
				Equipamento_Avariado previousValue = this._Equipamento_Avariado.Entity;
				if (((previousValue != value) 
							|| (this._Equipamento_Avariado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipamento_Avariado.Entity = null;
						previousValue.Ordem_Reparacaos.Remove(this);
					}
					this._Equipamento_Avariado.Entity = value;
					if ((value != null))
					{
						value.Ordem_Reparacaos.Add(this);
						this._ID_EQUIPAMENTO_AVARIADO = value.ID;
					}
					else
					{
						this._ID_EQUIPAMENTO_AVARIADO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Equipamento_Avariado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_Acessorio_Ordem_Reparacao", Storage="_Equipamento_Avariado_Acessorio", ThisKey="ID_ACESSORIOS", OtherKey="ID", IsForeignKey=true)]
		public Equipamento_Avariado_Acessorio Equipamento_Avariado_Acessorio
		{
			get
			{
				return this._Equipamento_Avariado_Acessorio.Entity;
			}
			set
			{
				Equipamento_Avariado_Acessorio previousValue = this._Equipamento_Avariado_Acessorio.Entity;
				if (((previousValue != value) 
							|| (this._Equipamento_Avariado_Acessorio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipamento_Avariado_Acessorio.Entity = null;
						previousValue.Ordem_Reparacaos.Remove(this);
					}
					this._Equipamento_Avariado_Acessorio.Entity = value;
					if ((value != null))
					{
						value.Ordem_Reparacaos.Add(this);
						this._ID_ACESSORIOS = value.ID;
					}
					else
					{
						this._ID_ACESSORIOS = default(Nullable<int>);
					}
					this.SendPropertyChanged("Equipamento_Avariado_Acessorio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_Bloqueio_Ordem_Reparacao", Storage="_Equipamento_Avariado_Bloqueio", ThisKey="ID_ESTADO_BLOQUEIO", OtherKey="ID", IsForeignKey=true)]
		public Equipamento_Avariado_Bloqueio Equipamento_Avariado_Bloqueio
		{
			get
			{
				return this._Equipamento_Avariado_Bloqueio.Entity;
			}
			set
			{
				Equipamento_Avariado_Bloqueio previousValue = this._Equipamento_Avariado_Bloqueio.Entity;
				if (((previousValue != value) 
							|| (this._Equipamento_Avariado_Bloqueio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipamento_Avariado_Bloqueio.Entity = null;
						previousValue.Ordem_Reparacaos.Remove(this);
					}
					this._Equipamento_Avariado_Bloqueio.Entity = value;
					if ((value != null))
					{
						value.Ordem_Reparacaos.Add(this);
						this._ID_ESTADO_BLOQUEIO = value.ID;
					}
					else
					{
						this._ID_ESTADO_BLOQUEIO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Equipamento_Avariado_Bloqueio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_GarantiaTipo_Ordem_Reparacao", Storage="_Equipamento_Avariado_GarantiaTipo", ThisKey="ID_TIPO_GARANTIA", OtherKey="ID", IsForeignKey=true)]
		public Equipamento_Avariado_GarantiaTipo Equipamento_Avariado_GarantiaTipo
		{
			get
			{
				return this._Equipamento_Avariado_GarantiaTipo.Entity;
			}
			set
			{
				Equipamento_Avariado_GarantiaTipo previousValue = this._Equipamento_Avariado_GarantiaTipo.Entity;
				if (((previousValue != value) 
							|| (this._Equipamento_Avariado_GarantiaTipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipamento_Avariado_GarantiaTipo.Entity = null;
						previousValue.Ordem_Reparacaos.Remove(this);
					}
					this._Equipamento_Avariado_GarantiaTipo.Entity = value;
					if ((value != null))
					{
						value.Ordem_Reparacaos.Add(this);
						this._ID_TIPO_GARANTIA = value.ID;
					}
					else
					{
						this._ID_TIPO_GARANTIA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Equipamento_Avariado_GarantiaTipo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_TimingReparacao_Ordem_Reparacao", Storage="_Equipamento_Avariado_TimingReparacao", ThisKey="ID_TIMING_REPARACAO", OtherKey="ID", IsForeignKey=true)]
		public Equipamento_Avariado_TimingReparacao Equipamento_Avariado_TimingReparacao
		{
			get
			{
				return this._Equipamento_Avariado_TimingReparacao.Entity;
			}
			set
			{
				Equipamento_Avariado_TimingReparacao previousValue = this._Equipamento_Avariado_TimingReparacao.Entity;
				if (((previousValue != value) 
							|| (this._Equipamento_Avariado_TimingReparacao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipamento_Avariado_TimingReparacao.Entity = null;
						previousValue.Ordem_Reparacaos.Remove(this);
					}
					this._Equipamento_Avariado_TimingReparacao.Entity = value;
					if ((value != null))
					{
						value.Ordem_Reparacaos.Add(this);
						this._ID_TIMING_REPARACAO = value.ID;
					}
					else
					{
						this._ID_TIMING_REPARACAO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Equipamento_Avariado_TimingReparacao");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamento_Avariado_TrabalhosAdicionai_Ordem_Reparacao", Storage="_Equipamento_Avariado_TrabalhosAdicionai", ThisKey="ID_TRABALHOS_ADICIONAIS", OtherKey="ID", IsForeignKey=true)]
		public Equipamento_Avariado_TrabalhosAdicionai Equipamento_Avariado_TrabalhosAdicionai
		{
			get
			{
				return this._Equipamento_Avariado_TrabalhosAdicionai.Entity;
			}
			set
			{
				Equipamento_Avariado_TrabalhosAdicionai previousValue = this._Equipamento_Avariado_TrabalhosAdicionai.Entity;
				if (((previousValue != value) 
							|| (this._Equipamento_Avariado_TrabalhosAdicionai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipamento_Avariado_TrabalhosAdicionai.Entity = null;
						previousValue.Ordem_Reparacaos.Remove(this);
					}
					this._Equipamento_Avariado_TrabalhosAdicionai.Entity = value;
					if ((value != null))
					{
						value.Ordem_Reparacaos.Add(this);
						this._ID_TRABALHOS_ADICIONAIS = value.ID;
					}
					else
					{
						this._ID_TRABALHOS_ADICIONAIS = default(Nullable<int>);
					}
					this.SendPropertyChanged("Equipamento_Avariado_TrabalhosAdicionai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipamentos_Substituicao_Ordem_Reparacao", Storage="_Equipamentos_Substituicao", ThisKey="ID_EQUIPAMENTO_SUBSTITUICAO", OtherKey="ID", IsForeignKey=true)]
		public Equipamentos_Substituicao Equipamentos_Substituicao
		{
			get
			{
				return this._Equipamentos_Substituicao.Entity;
			}
			set
			{
				Equipamentos_Substituicao previousValue = this._Equipamentos_Substituicao.Entity;
				if (((previousValue != value) 
							|| (this._Equipamentos_Substituicao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipamentos_Substituicao.Entity = null;
						previousValue.Ordem_Reparacaos.Remove(this);
					}
					this._Equipamentos_Substituicao.Entity = value;
					if ((value != null))
					{
						value.Ordem_Reparacaos.Add(this);
						this._ID_EQUIPAMENTO_SUBSTITUICAO = value.ID;
					}
					else
					{
						this._ID_EQUIPAMENTO_SUBSTITUICAO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Equipamentos_Substituicao");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loja_Ordem_Reparacao", Storage="_Loja", ThisKey="ID_LOJA", OtherKey="ID", IsForeignKey=true)]
		public Loja Loja
		{
			get
			{
				return this._Loja.Entity;
			}
			set
			{
				Loja previousValue = this._Loja.Entity;
				if (((previousValue != value) 
							|| (this._Loja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loja.Entity = null;
						previousValue.Ordem_Reparacaos.Remove(this);
					}
					this._Loja.Entity = value;
					if ((value != null))
					{
						value.Ordem_Reparacaos.Add(this);
						this._ID_LOJA = value.ID;
					}
					else
					{
						this._ID_LOJA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loja");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ordem_Reparacao_Estado_Ordem_Reparacao", Storage="_Ordem_Reparacao_Estado", ThisKey="ID_ESTADO", OtherKey="ID", IsForeignKey=true)]
		public Ordem_Reparacao_Estado Ordem_Reparacao_Estado
		{
			get
			{
				return this._Ordem_Reparacao_Estado.Entity;
			}
			set
			{
				Ordem_Reparacao_Estado previousValue = this._Ordem_Reparacao_Estado.Entity;
				if (((previousValue != value) 
							|| (this._Ordem_Reparacao_Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ordem_Reparacao_Estado.Entity = null;
						previousValue.Ordem_Reparacaos.Remove(this);
					}
					this._Ordem_Reparacao_Estado.Entity = value;
					if ((value != null))
					{
						value.Ordem_Reparacaos.Add(this);
						this._ID_ESTADO = value.ID;
					}
					else
					{
						this._ID_ESTADO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ordem_Reparacao_Estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ordem_Reparacao_Artigos(Ordem_Reparacao_Artigo entity)
		{
			this.SendPropertyChanging();
			entity.Ordem_Reparacao = this;
		}
		
		private void detach_Ordem_Reparacao_Artigos(Ordem_Reparacao_Artigo entity)
		{
			this.SendPropertyChanging();
			entity.Ordem_Reparacao = null;
		}
		
		private void attach_Ordem_Reparacao_Atribuicaos(Ordem_Reparacao_Atribuicao entity)
		{
			this.SendPropertyChanging();
			entity.Ordem_Reparacao = this;
		}
		
		private void detach_Ordem_Reparacao_Atribuicaos(Ordem_Reparacao_Atribuicao entity)
		{
			this.SendPropertyChanging();
			entity.Ordem_Reparacao = null;
		}
		
		private void attach_Ordem_Reparacao_MaoObras(Ordem_Reparacao_MaoObra entity)
		{
			this.SendPropertyChanging();
			entity.Ordem_Reparacao = this;
		}
		
		private void detach_Ordem_Reparacao_MaoObras(Ordem_Reparacao_MaoObra entity)
		{
			this.SendPropertyChanging();
			entity.Ordem_Reparacao = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ordem_Reparacao_Artigo")]
	public partial class Ordem_Reparacao_Artigo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_ORDEM_REPARACAO;
		
		private System.Nullable<int> _ID_ARTIGO;
		
		private System.Nullable<int> _QTD_ARTIGO;
		
		private System.Nullable<double> _VALOR_ARTIGO;
		
		private System.Nullable<System.DateTime> _DATA_ULTIMA_MODIFICACAO;
		
		private EntityRef<Artigo> _Artigo;
		
		private EntityRef<Ordem_Reparacao> _Ordem_Reparacao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_ORDEM_REPARACAOChanging(System.Nullable<int> value);
    partial void OnID_ORDEM_REPARACAOChanged();
    partial void OnID_ARTIGOChanging(System.Nullable<int> value);
    partial void OnID_ARTIGOChanged();
    partial void OnQTD_ARTIGOChanging(System.Nullable<int> value);
    partial void OnQTD_ARTIGOChanged();
    partial void OnVALOR_ARTIGOChanging(System.Nullable<double> value);
    partial void OnVALOR_ARTIGOChanged();
    partial void OnDATA_ULTIMA_MODIFICACAOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_ULTIMA_MODIFICACAOChanged();
    #endregion
		
		public Ordem_Reparacao_Artigo()
		{
			this._Artigo = default(EntityRef<Artigo>);
			this._Ordem_Reparacao = default(EntityRef<Ordem_Reparacao>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ORDEM_REPARACAO", DbType="Int")]
		public System.Nullable<int> ID_ORDEM_REPARACAO
		{
			get
			{
				return this._ID_ORDEM_REPARACAO;
			}
			set
			{
				if ((this._ID_ORDEM_REPARACAO != value))
				{
					if (this._Ordem_Reparacao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ORDEM_REPARACAOChanging(value);
					this.SendPropertyChanging();
					this._ID_ORDEM_REPARACAO = value;
					this.SendPropertyChanged("ID_ORDEM_REPARACAO");
					this.OnID_ORDEM_REPARACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ARTIGO", DbType="Int")]
		public System.Nullable<int> ID_ARTIGO
		{
			get
			{
				return this._ID_ARTIGO;
			}
			set
			{
				if ((this._ID_ARTIGO != value))
				{
					if (this._Artigo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ARTIGOChanging(value);
					this.SendPropertyChanging();
					this._ID_ARTIGO = value;
					this.SendPropertyChanged("ID_ARTIGO");
					this.OnID_ARTIGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTD_ARTIGO", DbType="Int")]
		public System.Nullable<int> QTD_ARTIGO
		{
			get
			{
				return this._QTD_ARTIGO;
			}
			set
			{
				if ((this._QTD_ARTIGO != value))
				{
					this.OnQTD_ARTIGOChanging(value);
					this.SendPropertyChanging();
					this._QTD_ARTIGO = value;
					this.SendPropertyChanged("QTD_ARTIGO");
					this.OnQTD_ARTIGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALOR_ARTIGO", DbType="Float")]
		public System.Nullable<double> VALOR_ARTIGO
		{
			get
			{
				return this._VALOR_ARTIGO;
			}
			set
			{
				if ((this._VALOR_ARTIGO != value))
				{
					this.OnVALOR_ARTIGOChanging(value);
					this.SendPropertyChanging();
					this._VALOR_ARTIGO = value;
					this.SendPropertyChanged("VALOR_ARTIGO");
					this.OnVALOR_ARTIGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_ULTIMA_MODIFICACAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_ULTIMA_MODIFICACAO
		{
			get
			{
				return this._DATA_ULTIMA_MODIFICACAO;
			}
			set
			{
				if ((this._DATA_ULTIMA_MODIFICACAO != value))
				{
					this.OnDATA_ULTIMA_MODIFICACAOChanging(value);
					this.SendPropertyChanging();
					this._DATA_ULTIMA_MODIFICACAO = value;
					this.SendPropertyChanged("DATA_ULTIMA_MODIFICACAO");
					this.OnDATA_ULTIMA_MODIFICACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artigo_Ordem_Reparacao_Artigo", Storage="_Artigo", ThisKey="ID_ARTIGO", OtherKey="ID", IsForeignKey=true)]
		public Artigo Artigo
		{
			get
			{
				return this._Artigo.Entity;
			}
			set
			{
				Artigo previousValue = this._Artigo.Entity;
				if (((previousValue != value) 
							|| (this._Artigo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artigo.Entity = null;
						previousValue.Ordem_Reparacao_Artigos.Remove(this);
					}
					this._Artigo.Entity = value;
					if ((value != null))
					{
						value.Ordem_Reparacao_Artigos.Add(this);
						this._ID_ARTIGO = value.ID;
					}
					else
					{
						this._ID_ARTIGO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Artigo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ordem_Reparacao_Ordem_Reparacao_Artigo", Storage="_Ordem_Reparacao", ThisKey="ID_ORDEM_REPARACAO", OtherKey="ID", IsForeignKey=true)]
		public Ordem_Reparacao Ordem_Reparacao
		{
			get
			{
				return this._Ordem_Reparacao.Entity;
			}
			set
			{
				Ordem_Reparacao previousValue = this._Ordem_Reparacao.Entity;
				if (((previousValue != value) 
							|| (this._Ordem_Reparacao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ordem_Reparacao.Entity = null;
						previousValue.Ordem_Reparacao_Artigos.Remove(this);
					}
					this._Ordem_Reparacao.Entity = value;
					if ((value != null))
					{
						value.Ordem_Reparacao_Artigos.Add(this);
						this._ID_ORDEM_REPARACAO = value.ID;
					}
					else
					{
						this._ID_ORDEM_REPARACAO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ordem_Reparacao");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ordem_Reparacao_Atribuicao")]
	public partial class Ordem_Reparacao_Atribuicao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_ORDEM_REPARACAO;
		
		private System.Nullable<System.Guid> _USERID;
		
		private System.Nullable<System.DateTime> _DATA_REGISTO;
		
		private System.Nullable<System.DateTime> _DATA_ULTIMA_MODIFICACAO;
		
		private EntityRef<Ordem_Reparacao> _Ordem_Reparacao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_ORDEM_REPARACAOChanging(System.Nullable<int> value);
    partial void OnID_ORDEM_REPARACAOChanged();
    partial void OnUSERIDChanging(System.Nullable<System.Guid> value);
    partial void OnUSERIDChanged();
    partial void OnDATA_REGISTOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_REGISTOChanged();
    partial void OnDATA_ULTIMA_MODIFICACAOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_ULTIMA_MODIFICACAOChanged();
    #endregion
		
		public Ordem_Reparacao_Atribuicao()
		{
			this._Ordem_Reparacao = default(EntityRef<Ordem_Reparacao>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ORDEM_REPARACAO", DbType="Int")]
		public System.Nullable<int> ID_ORDEM_REPARACAO
		{
			get
			{
				return this._ID_ORDEM_REPARACAO;
			}
			set
			{
				if ((this._ID_ORDEM_REPARACAO != value))
				{
					if (this._Ordem_Reparacao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ORDEM_REPARACAOChanging(value);
					this.SendPropertyChanging();
					this._ID_ORDEM_REPARACAO = value;
					this.SendPropertyChanged("ID_ORDEM_REPARACAO");
					this.OnID_ORDEM_REPARACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_REGISTO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_REGISTO
		{
			get
			{
				return this._DATA_REGISTO;
			}
			set
			{
				if ((this._DATA_REGISTO != value))
				{
					this.OnDATA_REGISTOChanging(value);
					this.SendPropertyChanging();
					this._DATA_REGISTO = value;
					this.SendPropertyChanged("DATA_REGISTO");
					this.OnDATA_REGISTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_ULTIMA_MODIFICACAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_ULTIMA_MODIFICACAO
		{
			get
			{
				return this._DATA_ULTIMA_MODIFICACAO;
			}
			set
			{
				if ((this._DATA_ULTIMA_MODIFICACAO != value))
				{
					this.OnDATA_ULTIMA_MODIFICACAOChanging(value);
					this.SendPropertyChanging();
					this._DATA_ULTIMA_MODIFICACAO = value;
					this.SendPropertyChanged("DATA_ULTIMA_MODIFICACAO");
					this.OnDATA_ULTIMA_MODIFICACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ordem_Reparacao_Ordem_Reparacao_Atribuicao", Storage="_Ordem_Reparacao", ThisKey="ID_ORDEM_REPARACAO", OtherKey="ID", IsForeignKey=true)]
		public Ordem_Reparacao Ordem_Reparacao
		{
			get
			{
				return this._Ordem_Reparacao.Entity;
			}
			set
			{
				Ordem_Reparacao previousValue = this._Ordem_Reparacao.Entity;
				if (((previousValue != value) 
							|| (this._Ordem_Reparacao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ordem_Reparacao.Entity = null;
						previousValue.Ordem_Reparacao_Atribuicaos.Remove(this);
					}
					this._Ordem_Reparacao.Entity = value;
					if ((value != null))
					{
						value.Ordem_Reparacao_Atribuicaos.Add(this);
						this._ID_ORDEM_REPARACAO = value.ID;
					}
					else
					{
						this._ID_ORDEM_REPARACAO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ordem_Reparacao");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ordem_Reparacao_Estado")]
	public partial class Ordem_Reparacao_Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRICAO;
		
		private EntitySet<Ordem_Reparacao> _Ordem_Reparacaos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    #endregion
		
		public Ordem_Reparacao_Estado()
		{
			this._Ordem_Reparacaos = new EntitySet<Ordem_Reparacao>(new Action<Ordem_Reparacao>(this.attach_Ordem_Reparacaos), new Action<Ordem_Reparacao>(this.detach_Ordem_Reparacaos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ordem_Reparacao_Estado_Ordem_Reparacao", Storage="_Ordem_Reparacaos", ThisKey="ID", OtherKey="ID_ESTADO")]
		public EntitySet<Ordem_Reparacao> Ordem_Reparacaos
		{
			get
			{
				return this._Ordem_Reparacaos;
			}
			set
			{
				this._Ordem_Reparacaos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Ordem_Reparacao_Estado = this;
		}
		
		private void detach_Ordem_Reparacaos(Ordem_Reparacao entity)
		{
			this.SendPropertyChanging();
			entity.Ordem_Reparacao_Estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ordem_Reparacao_MaoObra")]
	public partial class Ordem_Reparacao_MaoObra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_ORDEM_REPARACAO;
		
		private string _DESCRICAO;
		
		private System.Nullable<double> _VALOR;
		
		private string _OBSERVACOES;
		
		private System.Nullable<System.DateTime> _DATA_ULTIMA_MODIFICACAO;
		
		private EntityRef<Ordem_Reparacao> _Ordem_Reparacao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_ORDEM_REPARACAOChanging(System.Nullable<int> value);
    partial void OnID_ORDEM_REPARACAOChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    partial void OnVALORChanging(System.Nullable<double> value);
    partial void OnVALORChanged();
    partial void OnOBSERVACOESChanging(string value);
    partial void OnOBSERVACOESChanged();
    partial void OnDATA_ULTIMA_MODIFICACAOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_ULTIMA_MODIFICACAOChanged();
    #endregion
		
		public Ordem_Reparacao_MaoObra()
		{
			this._Ordem_Reparacao = default(EntityRef<Ordem_Reparacao>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ORDEM_REPARACAO", DbType="Int")]
		public System.Nullable<int> ID_ORDEM_REPARACAO
		{
			get
			{
				return this._ID_ORDEM_REPARACAO;
			}
			set
			{
				if ((this._ID_ORDEM_REPARACAO != value))
				{
					if (this._Ordem_Reparacao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ORDEM_REPARACAOChanging(value);
					this.SendPropertyChanging();
					this._ID_ORDEM_REPARACAO = value;
					this.SendPropertyChanged("ID_ORDEM_REPARACAO");
					this.OnID_ORDEM_REPARACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALOR", DbType="Float")]
		public System.Nullable<double> VALOR
		{
			get
			{
				return this._VALOR;
			}
			set
			{
				if ((this._VALOR != value))
				{
					this.OnVALORChanging(value);
					this.SendPropertyChanging();
					this._VALOR = value;
					this.SendPropertyChanged("VALOR");
					this.OnVALORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACOES", DbType="NVarChar(MAX)")]
		public string OBSERVACOES
		{
			get
			{
				return this._OBSERVACOES;
			}
			set
			{
				if ((this._OBSERVACOES != value))
				{
					this.OnOBSERVACOESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACOES = value;
					this.SendPropertyChanged("OBSERVACOES");
					this.OnOBSERVACOESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_ULTIMA_MODIFICACAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_ULTIMA_MODIFICACAO
		{
			get
			{
				return this._DATA_ULTIMA_MODIFICACAO;
			}
			set
			{
				if ((this._DATA_ULTIMA_MODIFICACAO != value))
				{
					this.OnDATA_ULTIMA_MODIFICACAOChanging(value);
					this.SendPropertyChanging();
					this._DATA_ULTIMA_MODIFICACAO = value;
					this.SendPropertyChanged("DATA_ULTIMA_MODIFICACAO");
					this.OnDATA_ULTIMA_MODIFICACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ordem_Reparacao_Ordem_Reparacao_MaoObra", Storage="_Ordem_Reparacao", ThisKey="ID_ORDEM_REPARACAO", OtherKey="ID", IsForeignKey=true)]
		public Ordem_Reparacao Ordem_Reparacao
		{
			get
			{
				return this._Ordem_Reparacao.Entity;
			}
			set
			{
				Ordem_Reparacao previousValue = this._Ordem_Reparacao.Entity;
				if (((previousValue != value) 
							|| (this._Ordem_Reparacao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ordem_Reparacao.Entity = null;
						previousValue.Ordem_Reparacao_MaoObras.Remove(this);
					}
					this._Ordem_Reparacao.Entity = value;
					if ((value != null))
					{
						value.Ordem_Reparacao_MaoObras.Add(this);
						this._ID_ORDEM_REPARACAO = value.ID;
					}
					else
					{
						this._ID_ORDEM_REPARACAO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ordem_Reparacao");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parceiro")]
	public partial class Parceiro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CODIGO;
		
		private System.Nullable<System.Guid> _USERID;
		
		private System.Nullable<int> _ID_TIPO_PARCEIRO;
		
		private System.Nullable<System.DateTime> _DATA_REGISTO;
		
		private System.Nullable<System.DateTime> _DATA_ULTIMA_MODIFICACAO;
		
		private System.Nullable<System.DateTime> _DATA_VALIDADE_LOGIN;
		
		private System.Nullable<bool> _ACTIVO;
		
		private string _NOME;
		
		private string _MORADA;
		
		private string _CODPOSTAL;
		
		private string _LOCALIDADE;
		
		private string _TELEFONE;
		
		private System.Nullable<int> _NIF;
		
		private string _EMAIL;
		
		private string _OBSERVACOES;
		
		private System.Nullable<bool> _CLIENTE;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<Parceiro_Tipo> _Parceiro_Tipo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCODIGOChanging(string value);
    partial void OnCODIGOChanged();
    partial void OnUSERIDChanging(System.Nullable<System.Guid> value);
    partial void OnUSERIDChanged();
    partial void OnID_TIPO_PARCEIROChanging(System.Nullable<int> value);
    partial void OnID_TIPO_PARCEIROChanged();
    partial void OnDATA_REGISTOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_REGISTOChanged();
    partial void OnDATA_ULTIMA_MODIFICACAOChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_ULTIMA_MODIFICACAOChanged();
    partial void OnDATA_VALIDADE_LOGINChanging(System.Nullable<System.DateTime> value);
    partial void OnDATA_VALIDADE_LOGINChanged();
    partial void OnACTIVOChanging(System.Nullable<bool> value);
    partial void OnACTIVOChanged();
    partial void OnNOMEChanging(string value);
    partial void OnNOMEChanged();
    partial void OnMORADAChanging(string value);
    partial void OnMORADAChanged();
    partial void OnCODPOSTALChanging(string value);
    partial void OnCODPOSTALChanged();
    partial void OnLOCALIDADEChanging(string value);
    partial void OnLOCALIDADEChanged();
    partial void OnTELEFONEChanging(string value);
    partial void OnTELEFONEChanged();
    partial void OnNIFChanging(System.Nullable<int> value);
    partial void OnNIFChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnOBSERVACOESChanging(string value);
    partial void OnOBSERVACOESChanged();
    partial void OnCLIENTEChanging(System.Nullable<bool> value);
    partial void OnCLIENTEChanged();
    #endregion
		
		public Parceiro()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._Parceiro_Tipo = default(EntityRef<Parceiro_Tipo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODIGO", DbType="NVarChar(MAX)")]
		public string CODIGO
		{
			get
			{
				return this._CODIGO;
			}
			set
			{
				if ((this._CODIGO != value))
				{
					this.OnCODIGOChanging(value);
					this.SendPropertyChanging();
					this._CODIGO = value;
					this.SendPropertyChanged("CODIGO");
					this.OnCODIGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TIPO_PARCEIRO", DbType="Int")]
		public System.Nullable<int> ID_TIPO_PARCEIRO
		{
			get
			{
				return this._ID_TIPO_PARCEIRO;
			}
			set
			{
				if ((this._ID_TIPO_PARCEIRO != value))
				{
					if (this._Parceiro_Tipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TIPO_PARCEIROChanging(value);
					this.SendPropertyChanging();
					this._ID_TIPO_PARCEIRO = value;
					this.SendPropertyChanged("ID_TIPO_PARCEIRO");
					this.OnID_TIPO_PARCEIROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_REGISTO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_REGISTO
		{
			get
			{
				return this._DATA_REGISTO;
			}
			set
			{
				if ((this._DATA_REGISTO != value))
				{
					this.OnDATA_REGISTOChanging(value);
					this.SendPropertyChanging();
					this._DATA_REGISTO = value;
					this.SendPropertyChanged("DATA_REGISTO");
					this.OnDATA_REGISTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_ULTIMA_MODIFICACAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_ULTIMA_MODIFICACAO
		{
			get
			{
				return this._DATA_ULTIMA_MODIFICACAO;
			}
			set
			{
				if ((this._DATA_ULTIMA_MODIFICACAO != value))
				{
					this.OnDATA_ULTIMA_MODIFICACAOChanging(value);
					this.SendPropertyChanging();
					this._DATA_ULTIMA_MODIFICACAO = value;
					this.SendPropertyChanged("DATA_ULTIMA_MODIFICACAO");
					this.OnDATA_ULTIMA_MODIFICACAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA_VALIDADE_LOGIN", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATA_VALIDADE_LOGIN
		{
			get
			{
				return this._DATA_VALIDADE_LOGIN;
			}
			set
			{
				if ((this._DATA_VALIDADE_LOGIN != value))
				{
					this.OnDATA_VALIDADE_LOGINChanging(value);
					this.SendPropertyChanging();
					this._DATA_VALIDADE_LOGIN = value;
					this.SendPropertyChanged("DATA_VALIDADE_LOGIN");
					this.OnDATA_VALIDADE_LOGINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVO", DbType="Bit")]
		public System.Nullable<bool> ACTIVO
		{
			get
			{
				return this._ACTIVO;
			}
			set
			{
				if ((this._ACTIVO != value))
				{
					this.OnACTIVOChanging(value);
					this.SendPropertyChanging();
					this._ACTIVO = value;
					this.SendPropertyChanged("ACTIVO");
					this.OnACTIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOME", DbType="NVarChar(MAX)")]
		public string NOME
		{
			get
			{
				return this._NOME;
			}
			set
			{
				if ((this._NOME != value))
				{
					this.OnNOMEChanging(value);
					this.SendPropertyChanging();
					this._NOME = value;
					this.SendPropertyChanged("NOME");
					this.OnNOMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MORADA", DbType="NVarChar(MAX)")]
		public string MORADA
		{
			get
			{
				return this._MORADA;
			}
			set
			{
				if ((this._MORADA != value))
				{
					this.OnMORADAChanging(value);
					this.SendPropertyChanging();
					this._MORADA = value;
					this.SendPropertyChanged("MORADA");
					this.OnMORADAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODPOSTAL", DbType="NVarChar(MAX)")]
		public string CODPOSTAL
		{
			get
			{
				return this._CODPOSTAL;
			}
			set
			{
				if ((this._CODPOSTAL != value))
				{
					this.OnCODPOSTALChanging(value);
					this.SendPropertyChanging();
					this._CODPOSTAL = value;
					this.SendPropertyChanged("CODPOSTAL");
					this.OnCODPOSTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCALIDADE", DbType="NVarChar(MAX)")]
		public string LOCALIDADE
		{
			get
			{
				return this._LOCALIDADE;
			}
			set
			{
				if ((this._LOCALIDADE != value))
				{
					this.OnLOCALIDADEChanging(value);
					this.SendPropertyChanging();
					this._LOCALIDADE = value;
					this.SendPropertyChanged("LOCALIDADE");
					this.OnLOCALIDADEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONE", DbType="NVarChar(MAX)")]
		public string TELEFONE
		{
			get
			{
				return this._TELEFONE;
			}
			set
			{
				if ((this._TELEFONE != value))
				{
					this.OnTELEFONEChanging(value);
					this.SendPropertyChanging();
					this._TELEFONE = value;
					this.SendPropertyChanged("TELEFONE");
					this.OnTELEFONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIF", DbType="Int")]
		public System.Nullable<int> NIF
		{
			get
			{
				return this._NIF;
			}
			set
			{
				if ((this._NIF != value))
				{
					this.OnNIFChanging(value);
					this.SendPropertyChanging();
					this._NIF = value;
					this.SendPropertyChanged("NIF");
					this.OnNIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(MAX)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OBSERVACOES", DbType="NVarChar(MAX)")]
		public string OBSERVACOES
		{
			get
			{
				return this._OBSERVACOES;
			}
			set
			{
				if ((this._OBSERVACOES != value))
				{
					this.OnOBSERVACOESChanging(value);
					this.SendPropertyChanging();
					this._OBSERVACOES = value;
					this.SendPropertyChanged("OBSERVACOES");
					this.OnOBSERVACOESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTE", DbType="Bit")]
		public System.Nullable<bool> CLIENTE
		{
			get
			{
				return this._CLIENTE;
			}
			set
			{
				if ((this._CLIENTE != value))
				{
					this.OnCLIENTEChanging(value);
					this.SendPropertyChanging();
					this._CLIENTE = value;
					this.SendPropertyChanged("CLIENTE");
					this.OnCLIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Parceiro", Storage="_aspnet_User", ThisKey="USERID", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.Parceiros.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.Parceiros.Add(this);
						this._USERID = value.UserId;
					}
					else
					{
						this._USERID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parceiro_Tipo_Parceiro", Storage="_Parceiro_Tipo", ThisKey="ID_TIPO_PARCEIRO", OtherKey="ID", IsForeignKey=true)]
		public Parceiro_Tipo Parceiro_Tipo
		{
			get
			{
				return this._Parceiro_Tipo.Entity;
			}
			set
			{
				Parceiro_Tipo previousValue = this._Parceiro_Tipo.Entity;
				if (((previousValue != value) 
							|| (this._Parceiro_Tipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parceiro_Tipo.Entity = null;
						previousValue.Parceiros.Remove(this);
					}
					this._Parceiro_Tipo.Entity = value;
					if ((value != null))
					{
						value.Parceiros.Add(this);
						this._ID_TIPO_PARCEIRO = value.ID;
					}
					else
					{
						this._ID_TIPO_PARCEIRO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Parceiro_Tipo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parceiro_Tipo")]
	public partial class Parceiro_Tipo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRICAO;
		
		private EntitySet<Parceiro> _Parceiros;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    #endregion
		
		public Parceiro_Tipo()
		{
			this._Parceiros = new EntitySet<Parceiro>(new Action<Parceiro>(this.attach_Parceiros), new Action<Parceiro>(this.detach_Parceiros));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="NVarChar(MAX)")]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parceiro_Tipo_Parceiro", Storage="_Parceiros", ThisKey="ID", OtherKey="ID_TIPO_PARCEIRO")]
		public EntitySet<Parceiro> Parceiros
		{
			get
			{
				return this._Parceiros;
			}
			set
			{
				this._Parceiros.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Parceiros(Parceiro entity)
		{
			this.SendPropertyChanging();
			entity.Parceiro_Tipo = this;
		}
		
		private void detach_Parceiros(Parceiro entity)
		{
			this.SendPropertyChanging();
			entity.Parceiro_Tipo = null;
		}
	}
}
#pragma warning restore 1591
